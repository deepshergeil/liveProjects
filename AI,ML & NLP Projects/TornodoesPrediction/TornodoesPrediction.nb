(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.1' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[    794379,      17270]
NotebookOptionsPosition[    785899,      17076]
NotebookOutlinePosition[    786242,      17091]
CellTagsIndexPosition[    786199,      17088]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell[TextData[StyleBox["HW3 - Machine Learning on Dataset 2",
 FontSize->36,
 FontColor->RGBColor[1, 0, 0]]], "Text",
 CellChangeTimes->{
  3.70917022389573*^9},ExpressionUUID->"a1898960-e1e8-4a6e-979e-62b99bfe4273"],

Cell["\<\
\t\t\t\t\t\t\t\tCompleted By: Deepak Singh

Importing the dataset\
\>", "Text",
 CellChangeTimes->{{3.709170258999508*^9, 3.709170265082295*^9}, {
  3.7092561196685867`*^9, 3.709256145277966*^9}, {3.728145177127564*^9, 
  3.7281451994992924`*^9}},ExpressionUUID->"62289b58-1760-4b30-bb94-\
9b53458d4d88"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"tornados", "=", 
   RowBox[{
   "ResourceObject", "[", "\"\<Tornadoes in the U.S., 1950-2015\>\"", "]"}]}],
   ";"}], "\n", 
 RowBox[{"dataset", "=", 
  RowBox[{"ResourceData", "[", 
   RowBox[{"tornados", ",", "\"\<Dataset\>\""}], "]"}]}]}], "Input",
 CellChangeTimes->{
  3.7091634817302027`*^9, 3.709164097612812*^9, 3.709164703216062*^9, 
   3.709168513931068*^9, 3.709235646772348*^9, {3.709236518580883*^9, 
   3.70923652501935*^9}, 3.709240577409566*^9, {3.7092422360052137`*^9, 
   3.709242275338442*^9}},ExpressionUUID->"0ee74ac0-65d6-4dfe-b34e-\
d15486e6ce09"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 20, "Length" -> 61217, "InitialType" -> 
                TypeSystem`Vector[
                  
                  TypeSystem`Struct[{
                   "Location", "Number", "Date", "StateNumber", "Magnitude", 
                    "Injuries", "Fatalities", "EstimatedPropertyLoss", 
                    "EstimatedCropLoss", "Start", "End", 
                    "MagnitudeEstimatedQ"}, {
                    TypeSystem`Atom[
                    Entity["AdministrativeDivision"]], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[DateObject], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[
                    Quantity[1, "People"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[TypeSystem`Boolean]}], 61217], "Shape" -> 
                TypeSystem`PackageScope`HeaderShape[
                  
                  Association[{All, "Location"} -> 1, {All, "Number"} -> 
                   1, {All, "Date"} -> 1, {All, "StateNumber"} -> 
                   1, {All, "Magnitude"} -> 1, {All, "Injuries"} -> 
                   1, {All, "Fatalities"} -> 
                   1, {All, "EstimatedPropertyLoss"} -> 
                   1, {All, "EstimatedCropLoss"} -> 1, {All, "Start"} -> 
                   1, {All, "End"} -> 1, {All, "MagnitudeEstimatedQ"} -> 1], 
                  TypeSystem`PackageScope`Limited[
                   TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Location" -> TypeSystem`PackageScope`AtomShape[150], 
                    "Number" -> TypeSystem`PackageScope`AtomShape[34], "Date" -> 
                    TypeSystem`PackageScope`AtomShape[75], "StateNumber" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Magnitude" -> 
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    "Injuries" -> TypeSystem`PackageScope`AtomShape[34], 
                    "Fatalities" -> TypeSystem`PackageScope`AtomShape[75], 
                    "EstimatedPropertyLoss" -> 
                    TypeSystem`PackageScope`AtomShape[75], 
                    "EstimatedCropLoss" -> 
                    TypeSystem`PackageScope`AtomShape[75], "Start" -> 
                    TypeSystem`PackageScope`AtomShape[106], "End" -> 
                    TypeSystem`PackageScope`AtomShape[106], 
                    "MagnitudeEstimatedQ" -> 
                    TypeSystem`PackageScope`AtomShape[36]]]], 20, {}]], 
                "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[485838432], "Type" -> 
                TypeSystem`Vector[
                  
                  TypeSystem`Struct[{
                   "Location", "Number", "Date", "StateNumber", "Magnitude", 
                    "Injuries", "Fatalities", "EstimatedPropertyLoss", 
                    "EstimatedCropLoss", "Start", "End", 
                    "MagnitudeEstimatedQ"}, {
                    TypeSystem`Atom[
                    Entity["AdministrativeDivision"]], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[DateObject], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[
                    Quantity[1, "People"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[TypeSystem`Boolean]}], 61217], "HandleQ" -> 
                True, "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[485838432]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Location\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Location\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Location"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Location"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Number\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Number"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Number"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Date\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Date"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Date"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StateNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StateNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "StateNumber"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "StateNumber"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Magnitude\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Magnitude\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Magnitude"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Magnitude"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Injuries\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Injuries\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Injuries"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Injuries"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fatalities\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fatalities\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Fatalities"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Fatalities"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedPropertyLoss\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedPropertyLoss\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "EstimatedPropertyLoss"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "EstimatedPropertyLoss"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedCropLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedCropLoss\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "EstimatedCropLoss"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "EstimatedCropLoss"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Start\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Start\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "Start"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "Start"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"End\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"End\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "End"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "End"]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeEstimatedQ\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeEstimatedQ\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213][{All, "MagnitudeEstimatedQ"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[All, "MagnitudeEstimatedQ"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500000", ",", "5000000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.77\[Degree]N 90.22\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.83\[Degree]N 90.03\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[1, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500000", ",", "5000000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.77\[Degree]N 90.22\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.82\[Degree]N 90.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[2, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.82\[Degree]N 90.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.83\[Degree]N 90.03\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[3, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:55\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"39.1\[Degree]N 89.3\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"39.12\[Degree]N 89.23\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[4, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox["\"Ohio, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:16:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"40.88\[Degree]N 84.58\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[5, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Arkansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 13:05:25\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "5000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.4\[Degree]N 94.37\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[6, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 01:19:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"37.6\[Degree]N 90.68\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"37.63\[Degree]N 90.65\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[7, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 01:21:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"41.17\[Degree]N 87.33\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[8, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["7"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 02:18:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"26.88\[Degree]N 98.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"26.88\[Degree]N 98.05\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[9, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:13:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.42\[Degree]N 95.25\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.52\[Degree]N 95.13\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[10, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["9"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:13:50\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["12"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.67\[Degree]N 95.05\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.83\[Degree]N 95.\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[11, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["10"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:21:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.35\[Degree]N 95.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.42\[Degree]N 95.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[12, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["11"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:23:55\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.98\[Degree]N 94.63\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.\[Degree]N 94.7\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[13, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["12"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:00:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.33\[Degree]N 94.42\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.45\[Degree]N 94.42\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[14, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["13"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:01:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["7"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.08\[Degree]N 98.35\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.1\[Degree]N 98.33\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[15, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["14"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:06:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.52\[Degree]N 96.55\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.57\[Degree]N 96.55\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[16, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:11:57\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["9"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["32"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.88\[Degree]N 94.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[17, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mississippi, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["16"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.6\[Degree]N 89.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[18, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mississippi, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["17"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.6\[Degree]N 89.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[19, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["18"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["10"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.18\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    GeneralUtilities`Slice[20, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 (-20), {1, 61217 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 61217 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    61217, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 61217 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 20, {1, 61217 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 (-20), {1, 61217 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 61217 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    61217, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 61217 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 20, {1, 61217 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1060953213][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1060953213]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1060953213][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {1442., {277., 283.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
          
          "CopyTag",
          DisplayFunction->(#& ),
          InterpretationFunction->("Dataset[<>]"& )],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 63, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 63, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 63, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[63], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092422783567467`*^9, 3.709242387618701*^9, 
  3.709257063415251*^9, 
  3.709785738510622*^9},ExpressionUUID->"45b4fffa-affb-49f3-804a-\
2d1033d44676"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"mag", " ", "=", " ", 
   RowBox[{"dataset", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "5"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"newscale", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"len", " ", "=", " ", 
   RowBox[{"Length", "[", "mag", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", 
   RowBox[{"i", " ", "\[LessEqual]", " ", "len"}], "  ", ",", 
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"i", "+", "1"}]}], ",", 
   RowBox[{"AppendTo", "[", 
    RowBox[{"newscale", ",", 
     RowBox[{"StringTake", "[", 
      RowBox[{
       RowBox[{"mag", "[", "i", "]"}], ",", 
       RowBox[{"-", "2"}]}], "]"}]}], "]"}]}], "]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"mapped", "=", 
   RowBox[{"dataset", "[", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Append", ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"\"\<newscale\>\"", "\[Rule]", "newscale"}], "//", 
          "Thread"}]}], "}"}]}], "]"}], "&"}], "]"}]}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]"}], "Input",
 CellChangeTimes->{{3.7092406254571857`*^9, 3.709240724463415*^9}, {
   3.709240820979971*^9, 3.7092408211097813`*^9}, {3.709240929741929*^9, 
   3.709240941170608*^9}, {3.7092409746478558`*^9, 3.7092410196117973`*^9}, 
   3.7092455092784023`*^9},ExpressionUUID->"9d8cc2f3-c9c3-4eac-b01b-\
92d79d0f672c"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         TemplateBox[{TagBox[
            
            DynamicModuleBox[{
             TypeSystem`NestedGrid`PackagePrivate`$state$$ = 
              Data`UnorderedAssociation[
               "RowCount" -> 20, "Length" -> 61217, "InitialType" -> 
                TypeSystem`Vector[
                  
                  TypeSystem`Struct[{
                   "Location", "Number", "Date", "StateNumber", "Magnitude", 
                    "Injuries", "Fatalities", "EstimatedPropertyLoss", 
                    "EstimatedCropLoss", "Start", "End", 
                    "MagnitudeEstimatedQ", "newscale"}, {
                    TypeSystem`Atom[
                    Entity["AdministrativeDivision"]], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[DateObject], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[
                    Quantity[1, "People"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[TypeSystem`Boolean], 
                    TypeSystem`Atom[String]}], 61217], "Shape" -> 
                TypeSystem`PackageScope`HeaderShape[
                  
                  Association[{All, "Location"} -> 1, {All, "Number"} -> 
                   1, {All, "Date"} -> 1, {All, "StateNumber"} -> 
                   1, {All, "Magnitude"} -> 1, {All, "Injuries"} -> 
                   1, {All, "Fatalities"} -> 
                   1, {All, "EstimatedPropertyLoss"} -> 
                   1, {All, "EstimatedCropLoss"} -> 1, {All, "Start"} -> 
                   1, {All, "End"} -> 1, {All, "MagnitudeEstimatedQ"} -> 
                   1, {All, "newscale"} -> 1], 
                  TypeSystem`PackageScope`Limited[
                   TypeSystem`PackageScope`ColumnShape[
                    TypeSystem`PackageScope`RowShape[
                    Association[
                    "Location" -> TypeSystem`PackageScope`AtomShape[150], 
                    "Number" -> TypeSystem`PackageScope`AtomShape[34], "Date" -> 
                    TypeSystem`PackageScope`AtomShape[75], "StateNumber" -> 
                    TypeSystem`PackageScope`AtomShape[34], "Magnitude" -> 
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`], 
                    "Injuries" -> TypeSystem`PackageScope`AtomShape[34], 
                    "Fatalities" -> TypeSystem`PackageScope`AtomShape[75], 
                    "EstimatedPropertyLoss" -> 
                    TypeSystem`PackageScope`AtomShape[75], 
                    "EstimatedCropLoss" -> 
                    TypeSystem`PackageScope`AtomShape[75], "Start" -> 
                    TypeSystem`PackageScope`AtomShape[106], "End" -> 
                    TypeSystem`PackageScope`AtomShape[106], 
                    "MagnitudeEstimatedQ" -> 
                    TypeSystem`PackageScope`AtomShape[36], "newscale" -> 
                    TypeSystem`PackageScope`AtomShape[28.800000000000004`]]]],
                    20, {}]], "InitialData" -> 
                TypeSystem`PackageScope`CacheHandle[576685723], "Type" -> 
                TypeSystem`Vector[
                  
                  TypeSystem`Struct[{
                   "Location", "Number", "Date", "StateNumber", "Magnitude", 
                    "Injuries", "Fatalities", "EstimatedPropertyLoss", 
                    "EstimatedCropLoss", "Start", "End", 
                    "MagnitudeEstimatedQ", "newscale"}, {
                    TypeSystem`Atom[
                    Entity["AdministrativeDivision"]], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[DateObject], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[String], 
                    TypeSystem`Atom[Integer], 
                    TypeSystem`Atom[
                    Quantity[1, "People"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[
                    Quantity[1, "USDollars"]], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[GeoPosition], 
                    TypeSystem`Atom[TypeSystem`Boolean], 
                    TypeSystem`Atom[String]}], 61217], "HandleQ" -> True, 
                "RowTarget" -> 20, "Data" -> 
                TypeSystem`PackageScope`CacheHandle[576685723]], 
              TypeSystem`NestedGrid`PackagePrivate`$path$$ = {}, 
              TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 1, 
              TypeSystem`NestedGrid`PackagePrivate`$grid$$ = 
              DynamicModule[{
                TypeSystem`NestedGrid`PackagePrivate`renderedGrid = Deploy[
                   Style[
                    Grid[{{
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Location\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Location\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Location"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Location"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Number\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Number\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Number"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Number"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Date\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Date\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Date"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Date"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StateNumber\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"StateNumber\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "StateNumber"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "StateNumber"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Magnitude\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Magnitude\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Magnitude"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Magnitude"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Injuries\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Injuries\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Injuries"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Injuries"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fatalities\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Fatalities\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Fatalities"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Fatalities"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedPropertyLoss\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedPropertyLoss\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "EstimatedPropertyLoss"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "EstimatedPropertyLoss"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedCropLoss\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"EstimatedCropLoss\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "EstimatedCropLoss"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "EstimatedCropLoss"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"Start\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"Start\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "Start"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "Start"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"End\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"End\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "End"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "End"]], "Mouse"], Background -> 
                    GrayLevel[0.95], Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeEstimatedQ\"", FontColor -> 
                    GrayLevel[0.4]]], {{20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"MagnitudeEstimatedQ\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "MagnitudeEstimatedQ"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "MagnitudeEstimatedQ"]], 
                    "Mouse"], Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}], 
                    Item[
                    Annotation[
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Pane[
                    RawBoxes[
                    StyleBox["\"newscale\"", FontColor -> GrayLevel[0.4]]], {{
                    20, Full}, 15}], 
                    Style[
                    Pane[
                    RawBoxes[
                    StyleBox[
                    "\"newscale\"", FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], {{20, Full}, 15}], FontColor -> 
                    RGBColor[0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], "LinkHand"], {"MouseClicked", 1} :> 
                    TypeSystem`NestedGrid`PackagePrivate`updateState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970][{All, "newscale"}]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[All, "newscale"]], "Mouse"], 
                    Background -> GrayLevel[0.95], 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500000", ",", "5000000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.77\[Degree]N 90.22\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.83\[Degree]N 90.03\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[1, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500000", ",", "5000000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.77\[Degree]N 90.22\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.82\[Degree]N 90.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[2, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.82\[Degree]N 90.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"38.83\[Degree]N 90.03\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[3, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:11:55\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"39.1\[Degree]N 89.3\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"39.12\[Degree]N 89.23\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[4, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox["\"Ohio, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 03:16:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"40.88\[Degree]N 84.58\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[5, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Arkansas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 13:05:25\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"500", ",", "5000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.4\[Degree]N 94.37\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[6, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Missouri, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 01:19:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"37.6\[Degree]N 90.68\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"37.63\[Degree]N 90.65\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[7, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Illinois, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 01:21:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"41.17\[Degree]N 87.33\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[8, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["7"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Sat 31 Dec 1949 02:18:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"26.88\[Degree]N 98.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"26.88\[Degree]N 98.05\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[9, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:13:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.42\[Degree]N 95.25\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.52\[Degree]N 95.13\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[10, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["9"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:13:50\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["3"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["12"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.67\[Degree]N 95.05\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"29.83\[Degree]N 95.\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[11, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["10"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:21:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["4"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.35\[Degree]N 95.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.42\[Degree]N 95.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[12, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["11"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 11:23:55\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["5"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.98\[Degree]N 94.63\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.\[Degree]N 94.7\[Degree]W\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[13, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["12"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:00:30\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["6"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"1", "\"person\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.33\[Degree]N 94.42\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"33.45\[Degree]N 94.42\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[14, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["13"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:01:15\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["7"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.08\[Degree]N 98.35\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"32.1\[Degree]N 98.33\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[15, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["14"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:06:10\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["8"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.52\[Degree]N 96.55\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.57\[Degree]N 96.55\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[16, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:11:57\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["9"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["32"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.88\[Degree]N 94.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[17, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mississippi, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["16"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["1"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"5000", ",", "50000"}], "}"}], "]"}]}], FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.6\[Degree]N 89.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F2", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[18, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Mississippi, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["17"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["2"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["0"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"0", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"34.6\[Degree]N 89.12\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F1", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[19, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Texas, United States\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Location"]]], "Mouse"], 
                    ImageSize -> {{150, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["18"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Number"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"Tue 31 Jan 1950 12:12:00\"", FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Date"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["10"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["StateNumber"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Magnitude"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["15"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Injuries"]]], "Mouse"], 
                    ImageSize -> {{34, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{"3", "\"people\""}], FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Fatalities"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    RowBox[{
                    RowBox[{
                    FormBox["\"$\"", TraditionalForm], "\[VeryThinSpace]"}], 
                    RowBox[{"Interval", "[", 
                    RowBox[{"{", 
                    RowBox[{"50000", ",", "500000"}], "}"}], "]"}]}], 
                    FontColor -> RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["EstimatedPropertyLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    Item[
                    "\[LongDash]", Alignment -> {Left, Baseline}, BaseStyle -> 
                    GrayLevel[0.85]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["EstimatedCropLoss"]]], "Mouse"], 
                    ImageSize -> {{75, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.2\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["Start"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes[
                    StyleBox[
                    "\"31.8\[Degree]N 94.18\[Degree]W\"", FontColor -> 
                    RGBColor[{
                    Rational[33, 74], 
                    Rational[27, 74], 
                    Rational[117, 370]}]]], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["End"]]], "Mouse"], 
                    ImageSize -> {{106, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation[
                    RawBoxes["False"], 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["MagnitudeEstimatedQ"]]], "Mouse"], 
                    ImageSize -> {{36, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}], 
                    Pane[
                    Annotation["F3", 
                    TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    GeneralUtilities`Slice[20, 
                    Key["newscale"]]], "Mouse"], 
                    ImageSize -> {{28.800000000000004`, Full}, Automatic}, 
                    Alignment -> {Left, Baseline}]}, {
                    Item[
                    Deploy[
                    Mouseover[
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 (-20), {1, 61217 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 61217 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    61217, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 61217 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 20, {1, 61217 - 20 + 1}])}]}, "   "], 
                    Row[{
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{0.56, 
                    1.031}, {6.429, 1.031}, {6.429, 60.967}, {0.56, 
                    60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{6.192899999999999, 
                    30.980699999999995`}, {42.4399, 0.7526999999999973}, {
                    42.4399, 8.209699999999994}, {16.432899999999997`, 
                    30.982699999999994`}, {42.4119, 53.6547}, {42.4399, 
                    61.244699999999995`}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 (-20), {1, 61217 - -20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5499, 30.980699999999995`}, {
                    36.7969, 0.7526999999999973}, {36.7969, 
                    8.209699999999994}, {10.7899, 30.982699999999994`}, {
                    36.7689, 53.6547}, {36.7969, 61.244699999999995`}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ - 20, {
                    1, 61217 - -20 + 1}])}], 
                    Pane[
                    Row[{"showing ", 1, "\[Dash]", 20, " of ", 
                    Style[
                    61217, FontColor -> GrayLevel[0], FontWeight -> 
                    "Medium"]}, 
                    BaseStyle -> {
                    FontSize -> 8., FontColor -> 
                    RGBColor[0.5098039215686274, 0.5098039215686274, 
                    0.5098039215686274]}], 150, ContentPadding -> False, 
                    Alignment -> {Center, Center}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.3]]], 
                    GrayLevel[0.3], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.026431741349551847`], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5778000000000001, 
                    53.654399999999995`}, {26.5568, 30.982399999999995`}, {
                    0.5498000000000001, 8.209399999999995}, {
                    0.5498000000000001, 0.7523999999999944}, {
                    36.796800000000005`, 30.980399999999992`}, {
                    0.5498000000000001, 61.2454}}}]}}, 
                    ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 20, {
                    1, 61217 - 20 + 1}])}], 
                    EventHandler[
                    MouseAppearance[
                    Mouseover[
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    GrayLevel[0.5]]], 
                    GrayLevel[0.5], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]], 
                    Graphics[{
                    EdgeForm[
                    Directive[
                    Thickness[0.05], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098]]], 
                    RGBColor[
                    0.27450980392156865`, 0.5372549019607843, 
                    0.792156862745098], {
                    Thickness[0.023255813953488372`], 
                    FaceForm[{
                    RGBColor[0.481, 0.481, 0.481], 
                    Opacity[1.]}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}}}, {{{
                    36.571, 1.031}, {42.440999999999995`, 1.031}, {
                    42.440999999999995`, 60.967}, {36.571, 60.967}}}], 
                    
                    FilledCurve[{{{0, 2, 0}, {0, 1, 0}, {0, 1, 0}, {0, 1, 
                    0}, {0, 1, 0}}}, {{{0.5598000000000001, 
                    53.788500000000006`}, {26.5668, 31.015500000000007`}, {
                    0.5878000000000001, 8.343500000000006}, {
                    0.5598000000000001, 0.7525000000000048}, {36.8068, 
                    31.017500000000005`}, {0.5598000000000001, 
                    61.24450000000001}}}]}}, ImageSize -> {Automatic, 9}, 
                    ImagePadding -> {{1, 1}, {0, 0}}, BaselinePosition -> 
                    Scaled[-0.2]]], "LinkHand"], {
                    "MouseClicked" :> (
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$ = 
                    Clip[TypeSystem`NestedGrid`PackagePrivate`$pos$$ + 
                    61217 20, {1, 61217 - 20 + 1}])}]}, "   "]]], Background -> 
                    GrayLevel[0.98], Alignment -> {Left, Top}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Hide", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970},
                     1, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 10 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970},
                     10, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 30 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970},
                     30, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show up to 100 rows", 
                    KernelExecute[
                    
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970},
                     100, {}]], MenuEvaluator -> Automatic], 
                    MenuItem["Show all", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`adjustLimits[{
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970},
                     100000000, {}]], MenuEvaluator -> Automatic]}}], 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft, 
                    SpanFromLeft, SpanFromLeft, SpanFromLeft, SpanFromLeft}}, 
                    BaseStyle -> {ContextMenu -> {
                    MenuItem["Copy position to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Copy data to clipboard", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`copyClip]], 
                    MenuEvaluator -> Automatic], Delimiter, 
                    MenuItem["Paste position in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentPosition[
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic], 
                    MenuItem["Paste data in new cell", 
                    KernelExecute[
                    TypeSystem`NestedGrid`PackagePrivate`toCurrentData[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`cellPaste]], 
                    MenuEvaluator -> Automatic]}, FontFamily -> "Verdana", 
                    FontSize -> 12}, Alignment -> Left, RowMinHeight -> 1.5, 
                    Dividers -> All, FrameStyle -> GrayLevel[0.85], 
                    BaseStyle -> {FontFamily -> "Verdana", FontSize -> 12}], 
                    LineBreakWithin -> False, ContextMenu -> {}, NumberMarks -> 
                    False, ShowAutoStyles -> False]], 
                 TypeSystem`NestedGrid`PackagePrivate`initialQ = True, 
                 TypeSystem`NestedGrid`PackagePrivate`self = $Failed}, 
                Dynamic[
                 TypeSystem`NestedGrid`PackagePrivate`setupViewPath[
                 TypeSystem`NestedGrid`PackagePrivate`$path$$, If[
                    Not[TypeSystem`NestedGrid`PackagePrivate`initialQ], 
                    
                    Module[{
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = $Failed, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$ = 
                    TypeSystem`NestedGrid`PackagePrivate`LookupCacheValue[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$["Data"]]}, 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$ = 
                    If[TypeSystem`NestedGrid`PackagePrivate`tmpData$ === 
                    TypeSystem`NestedGrid`PackagePrivate`$NotCached, 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    TypeSystem`NestedGrid`PackagePrivate`renderGrid[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 1284659970][
                    TypeSystem`NestedGrid`PackagePrivate`tmpData$]]; If[
                    Not[
                    FailureQ[TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid = 
                    TypeSystem`NestedGrid`PackagePrivate`tmpGrid$]; Null]]; 
                  TypeSystem`NestedGrid`PackagePrivate`initialQ = False; 
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$; If[
                    FailureQ[
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid], 
                    TypeSystem`SparseGrid[
                    TypeSystem`H["(data no longer present)"]], 
                    If[GeneralUtilities`$DebugMode, 
                    
                    Row[{TypeSystem`NestedGrid`PackagePrivate`renderedGrid, 
                    "  ", 
                    TypeSystem`NestedGrid`PackagePrivate`formatState[
                    TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$]}], 
                    TypeSystem`NestedGrid`PackagePrivate`renderedGrid]]], 
                 TrackedSymbols :> {
                  TypeSystem`NestedGrid`PackagePrivate`$pos$$}], 
                DynamicModuleValues :> {}], 
              TypeSystem`NestedGrid`PackagePrivate`$posCell$$, 
              TypeSystem`NestedGrid`PackagePrivate`$topBar$$ = Dynamic[
                TypeSystem`NestedGrid`PackagePrivate`alignBar[
                TypeSystem`NestedGrid`PackagePrivate`$state$$][
                 TypeSystem`NestedGrid`PackagePrivate`makeFramedBar[
                  TypeSystem`PackageScope`Pathbar[
                  TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                   TypeSystem`NestedGrid`PackagePrivate`updateState[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$path$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$pos$$, 
                    TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                    1284659970]]]], 
                TrackedSymbols :> {
                 TypeSystem`NestedGrid`PackagePrivate`$path$$}], 
              TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$ = Framed[
                Dynamic[
                 Replace[
                  MouseAnnotation[Null], {
                  TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][Null] -> "", 
                   TypeSystem`NestedGrid`PackagePrivate`$SliceMarker[
                    1284659970][
                    Pattern[TypeSystem`NestedGrid`PackagePrivate`path, 
                    Blank[]]] :> (
                    TypeSystem`NestedGrid`PackagePrivate`$lastPath = 
                    TypeSystem`NestedGrid`PackagePrivate`path; 
                    TypeSystem`NestedGrid`PackagePrivate`makePathTrail[
                    TypeSystem`NestedGrid`PackagePrivate`path, 
                    TypeSystem`NestedGrid`PackagePrivate`makePathElements]), 
                   Null :> Spacer[10], Blank[] :> Spacer[10]}], 
                 TrackedSymbols :> {}], FrameStyle -> None, ImageMargins -> 0,
                 FrameMargins -> 0, Alignment -> Top, 
                ImageSize -> {Automatic, 14}]}, 
             DynamicBox[
              ToBoxes[
               Column[
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, {
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}, {
                 TypeSystem`NestedGrid`PackagePrivate`$topBar$$, 
                  TypeSystem`NestedGrid`PackagePrivate`displayScrollBar[
                  TypeSystem`NestedGrid`PackagePrivate`$grid$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                   TypeSystem`NestedGrid`PackagePrivate`$pos$$], 
                  TypeSystem`NestedGrid`PackagePrivate`onDesktopShow[
                   TypeSystem`NestedGrid`PackagePrivate`alignBar[
                   TypeSystem`NestedGrid`PackagePrivate`$state$$][
                   TypeSystem`NestedGrid`PackagePrivate`$bottomBar$$]]}], 
                Spacings -> 
                If[TypeSystem`NestedGrid`PackagePrivate`$path$$ == {}, 
                  0, {{}, {0, 0.05, 0}}]], StandardForm], 
              ImageSizeCache -> {1510., {277., 283.}}, 
              TrackedSymbols :> {
               TypeSystem`NestedGrid`PackagePrivate`$state$$, 
                TypeSystem`NestedGrid`PackagePrivate`$grid$$}], 
             BaseStyle -> {LineBreakWithin -> False}, Deinitialization :> 
             TypeSystem`NestedGrid`PackagePrivate`deleteState[
              TypeSystem`NestedGrid`PackagePrivate`$state$$], 
             DynamicModuleValues :> {}, Initialization :> 
             Block[{$ContextPath = $ContextPath}, 
               Needs["TypeSystem`"]]], Deploy, DefaultBaseStyle -> "Deploy"]},
          
          "CopyTag",
          DisplayFunction->(#& ),
          InterpretationFunction->("Dataset[<>]"& )],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 68, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[68], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092455760798283`*^9, 3.7092571230027647`*^9, 
  3.7097857762343845`*^9},ExpressionUUID->"5a0708d0-4087-47b6-a62b-\
b2763d7b96d8"]
}, Open  ]],

Cell["\<\
Removing the entries that have MagnitudeestimatedQ as False. \
\>", "Text",
 CellChangeTimes->{{3.7091702758616657`*^9, 3.7091703059335203`*^9}, {
  3.709170384453381*^9, 3.709170386048737*^9}, {3.709171078363679*^9, 
  3.70917109019619*^9}},ExpressionUUID->"9ab839ed-49fb-4a46-b783-\
18d02b7bec91"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"withoutEF", "=", 
    RowBox[{"mapped", "[", 
     RowBox[{"Select", "[", 
      RowBox[{"#MagnitudeEstimatedQ", "&"}], "]"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]", "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.709150216615802*^9, 3.709150372531468*^9}, {
   3.7091504048719254`*^9, 3.7091505714867077`*^9}, {3.709150622920025*^9, 
   3.7091506502065*^9}, {3.709150700669168*^9, 3.709150793299362*^9}, {
   3.7091508300722723`*^9, 3.709150866910132*^9}, {3.709151291465653*^9, 
   3.7091512925664883`*^9}, {3.709151843730175*^9, 3.70915185158083*^9}, {
   3.709152305439513*^9, 3.709152380523828*^9}, {3.709153147926359*^9, 
   3.709153154679346*^9}, {3.709153207232142*^9, 3.7091532173275337`*^9}, {
   3.7091564288690777`*^9, 3.709156487799954*^9}, {3.709156863909539*^9, 
   3.7091568667705383`*^9}, {3.709170062379197*^9, 3.709170063689822*^9}, 
   3.709170321213675*^9, {3.709170369187475*^9, 3.709170412878838*^9}, {
   3.709170451988222*^9, 3.709170455383504*^9}, {3.70924099748313*^9, 
   3.709241001644763*^9}},ExpressionUUID->"cea28e58-1ce9-474b-8597-\
25c0df4e26c4"],

Cell["Removing entries that don\[CloseCurlyQuote]t have start coordinates.", \
"Text",
 CellChangeTimes->{{3.709170505376293*^9, 
  3.709170520187492*^9}},ExpressionUUID->"52c1d5d1-c0ac-48a0-abd0-\
8fa19f60e3fd"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"withoutMissingstart", "=", 
    RowBox[{"withoutEF", "[", 
     RowBox[{"Select", "[", 
      RowBox[{
       RowBox[{"Not", "[", 
        RowBox[{"MissingQ", "[", "#Start", "]"}], "]"}], "&"}], "]"}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{3.7091704741993933`*^9, 
  3.7091705328516493`*^9},ExpressionUUID->"d556159a-bc7a-42ae-a06c-\
2a9961d7afae"],

Cell["\<\
Replacing distances of data rows that don\[CloseCurlyQuote]t have end \
coordinates with zero and remaining one\[CloseCurlyQuote]s with the \
GeoDistance between the coordinates.\[LineSeparator]\
\>", "Text",
 CellChangeTimes->{{3.70917055754572*^9, 3.7091706370613117`*^9}, {
   3.709170670312956*^9, 3.709170673687874*^9}, 
   3.7092356562163057`*^9},ExpressionUUID->"62a3253b-f0fa-4743-9020-\
6485c6adac43"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{
  RowBox[{"start", "=", 
   RowBox[{"withoutMissingstart", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "10"}], "]"}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"end", "=", 
   RowBox[{"withoutMissingstart", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "11"}], "]"}], "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"length", " ", "=", " ", 
   RowBox[{"Length", "[", "start", "]"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{"list", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"For", "[", 
   RowBox[{
    RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
    RowBox[{"i", " ", "\[LessEqual]", " ", "length"}], ",", 
    RowBox[{"i", " ", "=", " ", 
     RowBox[{"i", "+", "1"}]}], " ", ",", 
    RowBox[{"If", "[", 
     RowBox[{
      RowBox[{
       RowBox[{"end", "[", 
        RowBox[{"[", "i", "]"}], "]"}], "==", " ", 
       RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], ",", 
      RowBox[{"AppendTo", "[", 
       RowBox[{"list", ",", "i"}], "]"}]}], "]"}]}], "]"}], ";"}]}], "Input",
 CellChangeTimes->{
  3.7091705494240847`*^9},ExpressionUUID->"0aab4925-c957-4160-a5e3-\
e34fff2e0fd8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 74, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[74], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092309940430603`*^9, 3.709240891101053*^9, 
  3.709241147515562*^9, 3.7092571235852757`*^9, 
  3.7097857766587687`*^9},ExpressionUUID->"39b2d10b-c554-4cba-88ad-\
4cf85c7fafc8"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"d", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", " ", "\[LessEqual]", " ", "length"}], ",", " ", 
   RowBox[{"i", "=", " ", 
    RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"list", ",", "i"}], "]"}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"d", ",", "0"}], "]"}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"d", ",", 
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"GeoDistance", "[", 
           RowBox[{
            RowBox[{"start", "[", "i", "]"}], ",", 
            RowBox[{"end", "[", "i", "]"}]}], "]"}], ",", "\"\<Miles\>\""}], 
         "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.709151296934779*^9, 3.7091515356873913`*^9}, {
   3.7091531745677013`*^9, 3.709153178722272*^9}, 3.709156469565269*^9, {
   3.709156858770357*^9, 3.7091568603576097`*^9}, {3.709170066331595*^9, 
   3.709170067001088*^9}},ExpressionUUID->"e3fe6fef-6e50-476e-bc12-\
13f732cb6845"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 76, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[76], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709230994293185*^9, 3.709240892000024*^9, 
  3.709241148413801*^9, 3.709257124016735*^9, 
  3.7097857769246445`*^9},ExpressionUUID->"76fab221-d2d4-4be1-83bb-\
ae9a894db93d"]
}, Open  ]],

Cell["Appending the new distances to the dataset.", "Text",
 CellChangeTimes->{{3.7091706567541437`*^9, 
  3.7091706859522057`*^9}},ExpressionUUID->"d3d5a001-c94b-47b1-8e0f-\
7ee920757c56"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{"withdistance", "=", 
    RowBox[{"withoutMissingstart", "[", 
     RowBox[{
      RowBox[{"MapThread", "[", 
       RowBox[{"Append", ",", 
        RowBox[{"{", 
         RowBox[{"#", ",", 
          RowBox[{
           RowBox[{"\"\<dist\>\"", "\[Rule]", "d"}], "//", "Thread"}]}], 
         "}"}]}], "]"}], "&"}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.709151582839551*^9, 3.7091516129500237`*^9}, {
   3.709151766308734*^9, 3.7091517731456013`*^9}, {3.709152390446248*^9, 
   3.709152408247834*^9}, {3.709152449544194*^9, 3.709152483251727*^9}, {
   3.7091528446191874`*^9, 3.709152847532329*^9}, 3.709152994344542*^9, 
   3.70917069527081*^9},ExpressionUUID->"e7b3d959-c2da-418a-9f0d-\
09a1ab905c19"],

Cell["\<\
Replacing the range of the property loss with the average of the Property \
Loss.\
\>", "Text",
 CellChangeTimes->{{3.709170712531756*^9, 
  3.7091707866092997`*^9}},ExpressionUUID->"580f8757-1bf0-409c-8a6f-\
e01ba8c4065d"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withinterval", " ", "=", " ", 
   RowBox[{"withdistance", "/.", 
    RowBox[{
     RowBox[{"Interval", "[", 
      RowBox[{"{", 
       RowBox[{"min__", ",", "max__"}], "}"}], "]"}], "\[Rule]", 
     RowBox[{"Mean", "[", 
      RowBox[{"{", 
       RowBox[{"min", ",", "max"}], "}"}], "]"}]}]}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.709170702289811*^9},ExpressionUUID->"d6bee7e5-c911-43ab-b658-\
73e3004776c9"],

Cell["", "Text",ExpressionUUID->"0f5fce1f-93a3-4d31-8591-b8edbb14aef3"],

Cell["\<\
Replacing the rows with no property loss with the average property loss of \
the particular class of tornado.\
\>", "Text",
 CellChangeTimes->{{3.7091707949975147`*^9, 3.709170860388979*^9}, 
   3.709171428335524*^9},ExpressionUUID->"d5025355-2c77-4923-9704-\
01c6cb024100"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"listinterval", "=", 
   RowBox[{"{", "}"}]}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"interval", "=", 
   RowBox[{"withinterval", "[", 
    RowBox[{"[", 
     RowBox[{"All", ",", "8"}], "]"}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", " ", "\[LessEqual]", " ", "length"}], ",", 
   RowBox[{"i", " ", "=", " ", 
    RowBox[{"i", "+", "1"}]}], " ", ",", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{
      RowBox[{"interval", "[", 
       RowBox[{"[", "i", "]"}], "]"}], "==", " ", 
      RowBox[{"Missing", "[", "\"\<NotAvailable\>\"", "]"}]}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"listinterval", ",", "i"}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.709152531319906*^9, 3.709152639544277*^9}, {
   3.709153187844933*^9, 3.70915319066607*^9}, 3.7091564733020763`*^9, 
   3.7091568557933197`*^9, 3.709156900892105*^9, {3.709170069910865*^9, 
   3.709170071927919*^9}},ExpressionUUID->"96173d5b-6791-4b20-934b-\
037850e648c8"],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"propertyloss", " ", "=", " ", 
  RowBox[{"{", "}"}]}], "\[IndentingNewLine]", 
 RowBox[{"For", "[", 
  RowBox[{
   RowBox[{"i", " ", "=", " ", "1"}], ",", " ", 
   RowBox[{"i", " ", "\[LessEqual]", " ", "length"}], ",", " ", 
   RowBox[{"i", "=", " ", 
    RowBox[{"i", "+", "1"}]}], ",", "\[IndentingNewLine]", "\t", 
   RowBox[{"If", "[", 
    RowBox[{
     RowBox[{"MemberQ", "[", 
      RowBox[{"listinterval", ",", "i"}], "]"}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"propertyloss", ",", "25"}], "]"}], ",", 
     RowBox[{"AppendTo", "[", 
      RowBox[{"propertyloss", ",", 
       RowBox[{"QuantityMagnitude", "[", 
        RowBox[{"Quantity", "[", 
         RowBox[{
          RowBox[{"interval", "[", "i", "]"}], ",", "\"\<USDollars\>\""}], 
         "]"}], "]"}]}], "]"}]}], "]"}]}], "]"}]}], "Input",
 CellChangeTimes->{{3.709152672872457*^9, 3.70915279822383*^9}, {
   3.709153182521927*^9, 3.7091531859046173`*^9}, 3.709156476597581*^9, {
   3.7091568430227423`*^9, 3.709156847611636*^9}, {3.7091700751729593`*^9, 
   3.709170075689126*^9}},ExpressionUUID->"e5875938-03d2-45f6-9638-\
f6ebe2e4cc80"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"{", "}"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 83, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[83], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709230997989861*^9, 3.7092408974072523`*^9, 
  3.709241155259552*^9, 3.7092571268364353`*^9, 
  3.7097857792947617`*^9},ExpressionUUID->"63a15a1d-3071-4f74-a47f-\
a69dec6b6b85"]
}, Open  ]],

Cell["\<\
Mapping the property loss, distance, injuries to the magnitude of the tornado.\
\>", "Text",
 CellChangeTimes->{{3.709170875528734*^9, 3.709170902242202*^9}, 
   3.709171055867269*^9},ExpressionUUID->"7427ae0d-0560-4bb8-954c-\
85ac6701634b"],

Cell[BoxData[
 RowBox[{
  RowBox[{"withpropertyloss", "=", 
   RowBox[{"withinterval", "[", 
    RowBox[{
     RowBox[{"MapThread", "[", 
      RowBox[{"Append", ",", 
       RowBox[{"{", 
        RowBox[{"#", ",", 
         RowBox[{
          RowBox[{"\"\<propertyloss\>\"", "\[Rule]", "propertyloss"}], "//", 
          "Thread"}]}], "}"}]}], "]"}], "&"}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{{3.709151740470648*^9, 3.709151785367937*^9}, {
   3.709151982673925*^9, 3.709151983647716*^9}, {3.709152520108053*^9, 
   3.709152527908655*^9}, {3.7091528276623783`*^9, 3.709152918085848*^9}, 
   3.709152987455936*^9, {3.709153029639326*^9, 3.709153030450881*^9}, 
   3.7091564799371567`*^9},ExpressionUUID->"3023fdc8-4f5a-4c15-a548-\
a8bac268bddf"],

Cell[BoxData[
 RowBox[{
  RowBox[{"examples", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"{", 
        RowBox[{"#propertyloss", ",", " ", "#dist", ",", "#Injuries"}], "}"}],
        "\[Rule]", "#Magnitude"}], "&"}], ",", 
     RowBox[{"Normal", "[", "withpropertyloss", "]"}]}], "]"}]}], 
  ";"}]], "Input",
 CellChangeTimes->{
  3.70915292969659*^9, {3.7091529626575117`*^9, 3.7091529687389297`*^9}, {
   3.709153057844584*^9, 3.709153063648737*^9}, {3.7091565365771313`*^9, 
   3.709156536810019*^9}, {3.709164115817243*^9, 3.709164122188332*^9}, 
   3.70916579603019*^9, {3.709165826103928*^9, 3.709165883988365*^9}, 
   3.709165959926976*^9, {3.709166036167075*^9, 3.709166040000647*^9}, {
   3.709166271266523*^9, 3.709166272302167*^9}, {3.709166428565219*^9, 
   3.709166431334338*^9}},ExpressionUUID->"345500ff-bdf4-4b74-8599-\
14dce8c8bad1"],

Cell["Separating training and testing data.", "Text",
 CellChangeTimes->{{3.709170914106351*^9, 
  3.709170928078682*^9}},ExpressionUUID->"fd12aa37-b263-428b-bdfa-\
aa85583350ef"],

Cell[BoxData[
 RowBox[{
  RowBox[{"training", "=", 
   RowBox[{"Drop", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], ";"}]], "Input",
 CellChangeTimes->{
  3.70917118700986*^9},ExpressionUUID->"7ed5a3fb-a155-4906-ab5b-452ed9a826ba"],

Cell[TextData[{
 StyleBox["Random Forest Classification Algorithm", "Subsection"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.709171128161394*^9, 
  3.7091711433282213`*^9}},ExpressionUUID->"c1d87b50-7010-4415-8ada-\
504fec596aa0"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classifier", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"training", ",", 
     RowBox[{"Method", " ", "\[Rule]", "\"\<RandomForest\>\""}]}], "]"}]}], 
  ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"testing", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testResults", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"classifier", "[", 
        RowBox[{"Keys", "[", "#", "]"}], "]"}], "\[Equal]", 
       RowBox[{"Values", "[", "#", "]"}]}], "&"}], ",", "testing"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{3.709171158279272*^9, 
  3.709254847897202*^9},ExpressionUUID->"ded370ce-64b6-4a1d-bf47-\
2bd150a4158f"],

Cell["\<\
The classify functions generates 5 classes owing to the mapping of the EF \
scale to F scale.\
\>", "Text",
 CellChangeTimes->{{3.7091714421064243`*^9, 
  3.7091714695900908`*^9}},ExpressionUUID->"8ad51521-63a8-455e-a970-\
8c992a71e2d1"],

Cell[TextData[{
 StyleBox["Performance Measure calculation.", "Subsection"],
 "\n",
 StyleBox["Accuracy ", "Subtitle"]
}], "Text",
 CellChangeTimes->{{3.709170943946788*^9, 3.709170964150036*^9}, {
  3.709171045243833*^9, 3.709171053087302*^9}, {3.709256252675115*^9, 
  3.709256256341731*^9}},ExpressionUUID->"92838201-e43c-4591-8e33-\
267d8bf0193f"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"classifier", ",", "testing", ",", "\"\<Accuracy\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.709156962996063*^9, 3.709157037368709*^9}, 
   3.709256247012951*^9},ExpressionUUID->"3c7f7b8b-a4be-47ce-9d92-\
2ed4a4f92d83"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox["0.9839142091152815`",
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 91, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[91], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.70925713186911*^9, 
  3.709785782717798*^9},ExpressionUUID->"a60a1012-29e9-46b8-92d6-\
9e7f9e1acf49"]
}, Open  ]],

Cell[TextData[StyleBox["Precision", "Subtitle"]], "Text",
 CellChangeTimes->{{3.709256365532351*^9, 
  3.7092563932379503`*^9}},ExpressionUUID->"de5e032f-fe69-4d10-ac6d-\
31e122468731"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Precision\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.709256412647743*^9},ExpressionUUID->"b3e8c44c-3e3b-4cd3-8c42-\
f25879a51b38"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "0.9629629629629629`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 92, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[92], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092571319255342`*^9, 
  3.709785782755902*^9},ExpressionUUID->"2bdc0e9a-aac9-4a36-a18d-\
e258faefd99f"]
}, Open  ]],

Cell[TextData[StyleBox["Recall", "Subtitle"]], "Text",
 CellChangeTimes->{{3.70925643463437*^9, 3.709256436646802*^9}, {
  3.709256496636866*^9, 
  3.709256497860777*^9}},ExpressionUUID->"a60e52f5-75da-453d-8e50-\
4caf6a4886f6"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Recall\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256692072814*^9, 
  3.709256695768641*^9}},ExpressionUUID->"43255825-5dac-4965-b4ae-\
be9c0b5b1348"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "0.9802955665024631`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "0.8181818181818182`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 93, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[93], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257131977624*^9, 
  3.709785782796008*^9},ExpressionUUID->"a2ad4b52-8cab-48c3-a8a8-\
3630d5676194"]
}, Open  ]],

Cell[TextData[StyleBox["ROC Curve", "Subtitle"]], "Text",
 CellChangeTimes->{{3.7092565288723927`*^9, 
  3.709256535402274*^9}},ExpressionUUID->"59aaea45-ce4e-4931-b67e-\
384d587c2664"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<ROCCurve\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256542203348*^9, 
  3.709256555250737*^9}},ExpressionUUID->"48c7b15f-2b74-42e2-94b4-\
3531b11da36d"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11wt0znUYB/CNiHCwCAkjJU7rpkhx1pFFcZRbamHlVk5yO2jhUHLfQaQx
sVzXNGcMM6zd71e72Gw2ZmM2m21CbodO7/M8eb7HM32Pc5yP8b7v//d7nu97
dJ04c+SUBk5OTt7OTk70+/9lZZe856a6zXV/2MvUHxyIerPDoHXm55vU076k
v+Fn/r6/2nfh018c/32n+fd71N5x66tcDgeY19un9mzWaO70yCDz+sFq/54R
/5RNPmjeL0S9PuNbxzscMu9/RL1k9mur+s8KNZ/nqHpW25phl/8OM5/vuNrx
Zq19F54wnzdcPXL8xPyBzhHm80eq33Xu9GvdiijzPNHqrTnVLw9vHGOeD97Y
/X3Hr1jzvLDP/IAbd33izPPHq39Mbjg2OzPenEeCehG9XetEcz6w42E7Lh6d
ZM4L5h9vTjbnl6Ke0uq7873OpJjzTFXz8XVKM+cLf3yk997TXunmvDPUwxtv
eDx4V4Y5/0z14E9qpy0rzzT3cVLtSsfVJsvcD/yM4+m2hGaZ+8pWt+/BJ2zu
D26TFXJnxu1sc585aj4evxxzv3CLbi3Hebyda+4bbpo2YO3B4lxz/6fUjfgC
YZkHmI+jS56ZD/h+QorrtWhY5iVffXfG7RGOKzHzA99sRwd02swTfC16DN2w
mS+Ybs//vQIzb3C1y+GnnqiEZf4K1RXhpYPnrYZlHuELk/kPzHzCJS3c/xia
Dsu8FqmLjn5Dv8z8wgVe25p3a1ls5hk+1YQv0Mz3WTWPzwhY5h1O93xhx6Tr
sMz/OXUKXfcmWPYBTti/vMFbfUrMfsAxfD2w7Mt5tRcPDCz7A5/NpQeEZZ/g
z/jjw7JfperCRX3vBb4Ey77B9HQTlsCyf7CsNyz7CI9aQBNeZvYT5pefDcu+
wh8+++Kt12Nh2V84k+hywewzPIwvEJb9hlNdaUNg2Xd4yLzVnzZrdNHsP5xI
6zsGlj6AB3U+tmZ+ACz9AMfOoSeEpS/K1e8kXXJsGCz9AfO6boGlT+ABvPCw
9MsldXg8DSgsfQP360BPAEv/wGG8nrD0UYX6DX5AWPoJ5nZZBEtfwa9+vfP7
dRmw9BfM69i50vQZ7MYDCUu/wfu/okKDpe/gXrRurS6b/oMDW9NGwNKH8PO0
HiGw9CO85wRdQJXpS5jHeRQs/QnTdl/dDUufwjx+N2Dp12o1tec4D1j6FuZx
8YWlf2G/0I8cIwpLH19Rt6Pr7QtLP8O/TKCJhqWv4Sd5QGDp7xo1tfX2nrD0
OczHtwCWfofpy71JGix9D/Pjdqw1/Q9TO8ydDsv3AdyEPl4ELN8P8Ar6dmhR
Z74v4Me4gOvc23O83R/2KrULZ6P5+RZ1Z45/Pcv30YN/v0vdlrNXLa8XqO7I
CVLL6wWrN/xEOWhe/5B608+Uw+b9QtWbfSlHzfsfU2/1oxw3nydcvX0b5U/z
+SLVO36jRJnPG60ewYkxnz9WnZtDiTXPE6cezYk3z5egzs+jJJjnTVSP5SSZ
509WFxZQks15pKg9OanmfNLUxUWUNHNe6erxnAxzfpnqknOUTHOeJ9WvcLLM
+cJ/XaVkmfPOVh8KoWSb889Rz+HkmPuAe3Ny63lpEBX+g/uCb1ynwHJ/p9Sh
Ryiw3Geeeh4HlvuF+3Dy1XLf8K2bFFju/7T6WBgFlnkoUHtzYJkPuB+nUC3z
At+9Q4Flfs6ow09QYJmnIvVCDizzBffnFKtl3uD79yiwzN9ZdWQEBZZ5PKde
zIFlPmFJiVrmFZa2Pa+W+YU/58Ayz3BMNAWW+Ya7ckrVMu/w0h8osMw/XFbK
Ucs+lKkHcmDZD3j3Lgos+wI35FxQy77Akziw7A8cH0eBZZ/g7pyLZr/g5cso
sOwbXH6RY/avXO3BgWUf4YC9FFj2E27MuWT2FZ7KgWV/4aRECiz7DPfgVJj9
hletpMCy73BlBcfsf6V6CAeWPoD3BVJg6Qe4Keey6Qt4GgeW/oBTUyiw9Anc
i1Nl+gX2WUOBpW/g6iqO6Z9q9VAOLH0E7w+iwNJPcHPOFdNX9S3/X69zn86B
pc/gjHRKfUvPXP2v72A3To1a+g9et5YCSx/CtTUctfRjrXo4B5a+hA8EU2Dp
T7glp04tgWdyYOlXOOskBX707zb4+b99wDXF
                 
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0WdXDgAAhuH3bVJGSTYNIUIUkgZlZEdlJDORjAYZf8u/SMMIoezRMMpM
0brO6cN17uf7k1RZV1IbEggEgtzltnGHW9ykkRtcp4F66qjlGle5wmVquEQ1
F7lAFeep5BxnOcNpTnGSCk5QznGOcZQjlFFKCYc5RDEHOcB+9rGXPeymiF3s
ZAfbKaSAbWwlnzxyyWEL2Wwmi01sZAOZZLCedaSzljWsJo1VrCSVFSxnGSks
JZkkEklgCYtZxEIWMJ95zGUO8cwmjlnEEsNMZjCdaUQTxVSmEEkE4YQRSgjB
4OTR4zLGKCP85x/DDPGXQf7wm1/85AffGaCfb3zlC5/po5ceuvnERz7wnne8
5Q2vecVLuujkBc95RgdPecJj2nnEQx5wnzZaaaGZezQxAYthUQA=
                    
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11gdUl2UUBnA0G5YtLStL03ZWNtQsrTAb2tI0K0uzshwtceesRDNXau4U
zdxbcIEDkKkMEVAZLrYyxVFurfd+j93ndCnO/xzPL/h/3/fe+9z7Va+LX7uu
lX18fAZW8vGRf//vp9bCF91nsO+/PVZ9S7OgGs2Cppjfz/Kd8cMb2+7P7uNr
PemqL9xnnhrfX6Ce4Xd2ut/Zxeb7y9VzM8bMyRizylwvUJ1a93r3WWuuv079
rvezwdxvozpTLj8nxNx/s7pTWEHHsIIt5nlC1VknHnOfcPN829TyNDWaRZjn
jVSflK9nRZrnj1I3bjWiUasR0eY8MeoBXR50n1hzPjpkaELw0ITt5rw71PLX
0/3izPnj1d7j1Egw9aCHyeWDE019dqq9P++YZOq1S40UJZv60fWkXKnJpp4p
6hbeA/9j/wpGvVPVXrkG0Kg/LdVu1Gq3Gv2gvfLU2qNGf+iY1qXRrUtp9Guv
+rCUI4xG/9LUV8vxJ9HoJ+09fpd0NfpLe4/TKEONftPe5a/KVKP/9Fjvz2nk
YZ96xXL5oZGP/WovDkNp5IWW6kS3PqBGfmivW3UPqpEnuoEXIBr5OqRu492A
Rt6y1L28A9PIX7apH408Zpt60shntqlvjhp5zTH1ppHXHFN/GvnNNf2gkedc
0x8a+c41/cozec8z/aOR/zzTTxrzkG/6S2M+8k2/acxLvul/gZkfGnmgMU80
8kFjvg6bvNCYNxr5oTF/NPJ0xMwjjXzRmE8aeSs0eaORNxp5o5E3GnkrMnmj
kTcaeaORNxp5KzZ5o5E3GnmjkTcaeSsxeaORNxp5o5E3GnkrNXmjkTcaeaOR
Nxp5K/PNa9573jNvj69g5I9G/mjkr+zy9SZXMPJII49H1cgjjTzSyONR39BP
Oj/x+MwZFYx80shnuRr5pJFPGvmkkc9jl88XoB55U4tr6o2cp8bzzVcvP9Z+
YP3nFqlxvSXq5OTuhQ3/WGauv1L9Z+DgDs+vXG3uF6iesOPVz+9dG2Tuv1bt
LnbXQzesN8+zQb1u6Qd7Hv1yo3m+YHXs7Z+NfzI2xDzvJnXm6K9ffvqeLeb5
t6pLz/S/0PS7UHOeMPVfPb5f77sv3Jxvm3qMXP7OCHNeevJ9r7lPpDk/HXDg
raMPfBtl6hGtXjS13esPL4o29YlRr3nz/cWP7I4x9YpVh1TpVLlBpe2mfnTE
VvkPO0w96YR+XTc/9VGcqS/tblaz8bh4U+8E9aH8nn2abEow9U9UHwnom/Ts
kUTTj53q43LcW5NMf+hz1YaNeuGlXaZftH+u3DDZ9I92X/7t913Jpp8p6nGz
Xtk5v1uK6S896VTL8wsupph+p6qnSfumppr+07+u9hpo8kDPvbbNj0siaeRj
j3pBt7bScpMXemnkOznLjtHIz171yjrv3bjiJxp5ooOk3HXSTL7ojWkffrVq
A428patdeNwRaeSPDp/w8fY1eTTymKGOLv7UtZxGPuk4acfNmSavtGueKxCN
/NKpl7zAmDzT6d7xaOR7v3r/xm/kY/JOZ1fvVTWkygGTf7pA/nw2jXmgi+Pl
QAfNfNAuLFO2xNGYl0Pqk/6DXElpzA995tCQ8tDTNOYpS+1uVjt8Ao35oodL
nKtnm3mjR8jtO9OYP9qF2wWUxjzSo/dGuQTQmM8c9dgrYobnNqcxr7QLi0sM
jfmlJ3rxozHP9C8/yxdyzXzTUvz8njTmnZ5eJA2kMf/0zNsSrzt8ZZ7ZB/Rs
OU5bGvuBniNxCaCxL2hZbt0LaeyPfPV8+XVDGvuEXngxxU0Ijf1Cu2UxrSie
xr6hl8m6qFlg9g/tdo9rMI19RLvhcxNIYz/RgXnpx0vO0NhXh9VuN7iJpbG/
aBfmu8sm0thndLA33jT22xG1m13XEBr7jt4q8ehDY//RYadlAGnsQ1qmq1fV
QrMf6Sgpd3sa+5KW6eg9j8b+pCX9x0to7NMidbw8fhMa+5WW9J70p7FvaUln
3yQa+5dOEd5RbPYxLenq15XGfqbTZD0E0tjXdIZLR/8LNPZ3iVq6f6oljX1O
H5Rxm0Jjv9NZ3vqkse9L1dKdgfVp7H86X+Lbn8b7gJbqDoqg8X6gpXrnqpWZ
9wVdInHoQOP9Qcvpzy+g8T6h5XRDymm8X46qT0h5m9J439DydMNG0Xj/0Ke9
/32i8T6iz8rj1i437ydavn2pB433FX1J1td6Gu8v+r//tT/8/d8j92YV
                 
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0Vd0CAYABdDEjh0RK0hiJPZMjBhJbCFEbDFjhkgQsZWW1h4dRqeWDlpa
Oo1WB63R0kFLS4fRYbZmS2ndc3zc9855vy8yPTs1K09AQEAgk8VUpjGF3MD7
Ww6TmMgEssliPJmMYywZjGE0oxjJCIaTzjCGMoTBDGIgaQygP/3oSx9604ue
pNKDFLrTjWS60oUkOtOJjnSgPe1oSxsSSSCe1rSiJS2IoznNaEoTYomhMY1o
SAPqU4+61KE2tahJDaKJojrVqEoVIokgnMpUoiJhVKA85ShLGUIpTQilCKYk
JShOMYpShMIEUYiCFCA/+chLHgID7x/9v/qPu9zhX25zi3/4m5vc4DrXuMoV
/uJPLnOJi1zgPOf4g9/5jV85yxlOc4pf+Jmf+JGTnOAHvuc4x/iObznKEb7h
a77iSw5ziC/4nIMcYD/7+IxP2csePuFjPuJDdvMB77OLnexgO+/xLu/wNm/x
JtvYyhu8zhY28xqvsomNvMLLvMSLbGA9L/A863iOZ3mGp3mKJ1nLGlaziid4
nMd4lJWsYDnLWMoSFrOIhSzgER5mPvN4iAeZyxweYDazmMkMpjONqUwhl8nk
MImJTCCbLMaTyTjGksEYRjOKkYxgOOkMYyhDGMwgBpLGAPrTj770oTe96Ekq
PUihO91IpitdSKIznehIB9rTjra0IZEE4mlNK1rSgjia04ymNCGWGBrTiIY0
oD71qEsdalOLmtQgmiiqU42qVCGSCMKpTCUqEkYFylOOspQhlNKEUIpgSlKC
4hSjKEUoTBCFKEgB8nMPwFaedg==
                    
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11nmUT2Ucx/EhpBBKiBCimghFCZk2pJA1RCqFkDXLqCaKpCRkSXYRGvvO
MPZ937MvY99VShR1n+/nnOd9PKd+/8x5nZm5v3vv810++Ru3qdkkdUxMTHyq
mBj38/8+deyzK+5Wn4i79a8uxz3bOFXn6wWbxt3qTt7T73hu719DuwW/7+m9
NWlZtmuTewd/38/7z1L5H/7ozQHB/w/27vXN0VVdTg8JrjfMO+epMe/EtxsZ
XH+09858M7qVvTEm+L6x3vdX6b8ladm44PvHe78b3y5vmZ4TgvuZ6D15XI1W
C15ODO5vkveVrSUWlc48Jbjfqd7lbmTNMH/HtOD+p3svj66Wu8qM4Hnwydjm
tRtMnRk83yzvO93lsswOnhc/Vrfy2H3t5wTPP9e7ZvR0uXbNDd7HPO9O3R/5
tf5T84P3g4d+7z4LgveV5L14mnvgpOD9LfROia6Ws9Gi4H0me6c7cKZvvaXJ
wftd7B0b3d2QAkuC940fStPkUsvnlwbvHz+dOc+K3r8tDc5jmfcruXYNnjRu
WXA++I1CfVpsqLM8OC/cpniF8ufSrQjOD39a1t3wiuA8V3oPqDjnRGzzlcH5
4h/d6861KjhvPK+hu8FVwfmv9l7X7OBbX32MVQ94f/tBJROLrgnqA19IqJp+
/SGselnr/U+vtNEJYtUPzjowOaqQdUE94YKjOkZXxKqv9d6lEotGT4xVb7iS
e321NwT1h+svHXGzV9qNQT3ilhvqbJ84F6s+N3kn7M40fm0zrHrFfd3j5twc
1C8ec969QKx63uI966orGKz6xnac2bcG9Y7Ppat1fFZrrPrHHTIW2/zCGqx+
wPZ1+bYF/YF75nAPhNUvWJfD6h88pIA74O1BP2HXLfd8htVf2I5/H1a/7fB+
wj5Y/Yejw4zuEKsfsbtareNY/bnTO3p5l1PKYfUrtnYchNW/+Ei1ritTX8Tq
513e7mm/rYjV39jKZRRWv2P39mZexer/3d5WLtWx5gG205iINR9w9rYTohr8
OZgX2Nq3Ptb8wHa8M7HmCXbVkjXDnmC+4DJWgFjzBrvqK7EIa/5gO45se4N5
hF0112iFNZ9wo+FfRFfEmlfY2j3vvmB+YXt9nbHmGXbd1n8L1nzD0eFGFb0/
mHfYde+MbljzD+txsebhAW9r3xJY8xFHwy8qGKx5iYtZg2DNz4PedntlseYp
tnYbiDVfcVQrPUafx5q3h7zd9CteAWv+YrvcCKx5jK09/sCaz4e9L16pVORI
Nax5jd10bjsBa35j/TwSzHMcDQf3DcF8x1+6cq+HNe+xdVMPrPmP77YCwdoH
WMeBtR/wsCyugo4G+wLb+CmFtT/wgzZAsPYJjorNdViwX/AU1x5JWPsGu2mT
4xTW/sFP2oJJCfYRtuOLw9pPeElhdyBY+wrbuBqCtb/wS0XcBsBqf5xRDRTs
t2Pe21w75cHad9hN47qVsfYfft2tj45Y+xDb6xuDtR/xsXKuYrD2Jbbxdh1r
fx73fj/qrsWFsfYpLq4LBvsV/+7aryvWvsVuWw2ehLV/8SfWIFj7GNvtpTnh
rf2Mb7cBg7WvsY3Dhlj7G/er5wYu1j7Hdrk5WPsd32ftgbXvsW3zTCe9tf/x
D249lcHKA7ipfbDyAX7UHhgrL2Abn4ux8gOe3dqdMFaeOOUdrwb2Vr7Az9jA
wsob2MZpW6z8gVe7dTYcK49g9/bGr8XKJ/hVVy5XsPLKaW8bf/mx8gveE22v
hKpYeQZbvOiClW/w23aDWHkHK05j5R981q2/m1h56Iy3VV8sVj7CH9iAwcpL
2MZLd6z8hP8e6hYIVp7CiiNY+Qp/7l5f+rPeylvYxkFJrPyF77IAg5XHsOve
Qn2w8hn+zj3uAqy8htW+WPkNP2AFc85beQ5bfCmPle/wT+72WmDlPWztNhgr
/+HHbeBj5UHspl+TS1j58Lz3Qne53Fh5EVt7VMLKj/hFN+47YOVJnF4Bz1v5
Em/a6D5Y6xJbOV/Dyp8XvF+zA8bKo9jiRg2sfIoPu7tLwMqr2MovESu/4vds
QGM9Li6iheStfIt/SXELGCvvYiuXBlj5F39oAQsrD2PbvrOw8jG+zeIpVl7G
drwZL3krP+Ov3bgqjZWncXUVoLfyNb7XGg4rb2M7jmSs/I1H2njB//0z/PD7
fwHYq6Iv
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0VV0EAQABdCNrtE1enR31+jO0Q2ja6ND6Q4lDVBaCSWUDqUbBaW7u1uQ
vufwcd877/uFhEeGRUQJCAgIpL8YyCAGBH7e/ehLH3rTi0gi6EkPutONrnSh
M53oSAfaE0472tKG1rSiJS1oTjOa0oTGNKIhDQijPvWoSx1qU4ua1KA61ahK
FSpTiYpUoDzlCKUsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5ykoPsZCMr
WchMJjISQgbSk460pCE1qQgmJSlITjKSkoTEJCIhCYhPEPGISxxiE4uYxCA6
0YhKFAIDPx/9UX3gPe94yxv+5zWv+I+XvOA5z3jKEx7ziIc84D73uMsdbnOL
m9zgOte4yhUuc4mLXOA85zjLGU5zipOc4DjHOMq//MMRDvM3f3GIgxxgP/vY
yx52s4ud7GA729jKn/zBFjaziY1sYD3rWMsaVvM7v7GKlaxgOb/yC8tYyhIW
8zM/sYiFLGA+85jLHH7kB2Yzi+/5jm/5hpnMYDrTmMoUvuYrJjOJiUxgPOMY
yxhGM4qRjGA4wxjKEL7kCwYziIEMoD/96EsfetOLSCLoSQ+6042udKEznehI
B9oTTjva0obWtKIlLWhOM5rShMY0oiENCKM+9ahLHWpTi5rUoDrVqEoVKlOJ
ilSgPOUIpSxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKSg+xkIytZyEwm
MhJCBtKTjrSkITWpCCYlKUhOMpKShMQkIiEJiE8Q8YhLHGITi5jEIDrR+ARA
Q557
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx113m4jVUUx/FLRKUSGVOINMiQVKTcVCRNUqmIUFIqKkOESEpFUuYhY4SS
0DXPrnnITGaSeWxANL17/Z5nfR+7uv/c53PPOe95373XXut3CzdoWqNhxpSU
lFYZUlLC7//7qZKnTvPVlSennutF7gThL9HrG93GPNui9+9y28t19kSf3+cu
NW3/sC4lD0bXO5La/Y3HVt8x9IXUc93SfbjXXwOPnO4Qvf6+u+wjozJ3vb9r
9P7u7oqZrr8t14oe0ed7u3fvbPfy8y36Rdcb6H5/5prBE68cHF1/yL+spzqe
mmtFzsYZnhvm1vcPdzeqEP4ywq37GemeOvrFQdUvGuXW/Y12X5S3R7lWO8a4
db9fu+vYDY916/7HuZ8602zSj/d869b943du+vDdU2PHR88zwT0m3F7eidHz
4bXJtxXs+F30vGnuPzYsPljmcFr0/JPc11yyfXKVmpOj9ZjifrjyL51qzZkS
rc9U95tts9ZocsO0aL3wkHB7PadH6zfDvSS5u15/zYjWc6b758JVk1uaFa3v
bPcVT4dPzI7We4776vDxQXOi9cfJm5MlmRvtB36g/cqWbbPOi/YH78gfbmBe
tF/z3c3tC+ZH+4fD6vW/Nj3aT/z5kdPZv9iaHu3vAneZcLufLoj2Gy8sGjZ4
YbT/uPacvulzz2LVwyL3sdpFvlr2LVZ9LHZ3Sr59fUOsesFWDvmXRPWDx5ac
X/fA91j1tNRdaelDyRWx6gtvaLip+J/ll0X1hpPNypHlGFb9LXf/PTAsMFY9
Yrv9p1dE9YmvW5cxWeKVUb3iGU0//rrkfKz6/d79qD0QVj3jZmG7cq+K6hvf
OTR36WKvY9U7zmIbiFX/OFy9dLHVbp0HPPCjvRekdcA6H/iFsPxbsM7LGndy
c8dn3YJ1frA9Tnes84QXzD2bVDTW+Vrr/uTSUCFY5w3b1QZjnT8cqvvJM1jn
cZ37aDh+j2OdTzylSs0+9cdhnVfcseeAZAXXR+cXP2gHAus84zy2gFjnG+8K
xynfhui8Y3u8ZljnH7fId7Ja+5VY/QDfZTe80a3+gC9M65BUBFa/wHY8tmP1
j03usJs9ymH1E/ySvQGrv+CbraCx+s0P7qQ4TxSuitV/8KLOhX4aOQyrH+HP
1ocGg9WfNrufsQLC6lfYyn8CVv/C4dVp2bZE/QxPz9ZmRGojrP6G36sVNgyr
32FrdwW2Rv0P2/a3xOqHeI+1A6z+iL8Ju1V8m1v9EreyA43VP/HdJeolRwCr
n253XxwevwJWf8Ubw3HohdVvsbXH41j9d4c7nJ6T1bD6Mb412Z02I7D6M9bv
nVG/xklxtb67BFb/xlYutbD6OR73675XFnXG6u+4V2gvaVj9Hr+lBY76P342
KfZul+5yax7ge61hYM0HHLppzsZY8wJbu+iDNT9wOM1907HmCTaewJovu92z
wnYWxJo3eHhrW4Bo/uAPwvFvjTWP8KvWILDmE9a4wJpX2JYnw4/R/MIFrGCx
5hm241wba77hfReEBow17/Dy0P4nYc0/PN5expqHuHcol+x73JqP2I5nRax5
ievZgMOan9jaeV+seYrD6mZciDVfcXZruFjz9if3b+H4FMKav3hzt7DgWPMY
zw7tuQ3WfMbJwyYtFWteY41zrPmNrXwy7o3mObZ2UhprvuPy1mCx5j2+qqCt
iFvzH59nF8TKA3i/LR9WPsB2nHLscysvYGufqVj5ASebnXQ4rDyBbdz2x8oX
uIE1SKzxge+rad/gVv7Y777RAgJWHsGX2QZj5RNs47MtVl7BIX1MHY2VX7Di
FlaewXa8Mh1wK9/gLqHd3oSVd/BrYRzWxco/+AkLBFh5CN9uD4CVj7DKCysv
YWs3OQ+6lZ+wjZ9KWHkKh25fowlWvsLfhTg0ACtv4X7p1pDdGu/4bQsAWHns
kNvabxGsfIZtHFfHymvYpm87rPyG7fJfYeU5fNriMFa+w9tC+8l82K28h+ed
tYbjVv7DX4Z4Ug8rD+LkYsmEwsqH2JZ7GlZexDp+WPkRWzvOdcStPIkLW4DC
ypf4fLtBrLyJD5WxA+VW/sSrQvktxYpL2NrRKax8etRt46koVl7FFldqYOVX
bPGzPVaexdUsIGDlW1zK/l3Byrv4chWMW/kX/x7GdVmsPIwtvtXHysfYvr4b
Vl7GVo4zsPIzVnvC//07/uH1fwA6rrDN
                 
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0VV0EAQABdANQaQbRjO6u2t05+iGESM3ugTp7i6TULq7uxWUbiUVlA5p
7jl83Pd+3t8LDosMjYgSEBAQSIToR3/60ofe9KInPehOZODnbTe60oXOdKIj
4XSgPe1oSxhtaE0rWtKC5jSjKU1oTCMa0oD61COUutShNrWoSQ2qU42qVKEy
lahIBcpTjrKUIYTSlKIkJShOMYpShMIUoiAFyE8+8pKH3OQiJznITjaykoXM
ZCIjGUhPMOlISxpSk4qUpCA5QSQjKUlITCISkoD4xCMucYhNLGISg6+IzpdE
IypfEIXAwM9Hf1QfeM873vKG1/zPK17yguc84ylPeMwjHvIf//KA+/zD39zj
Lne4zS1u8hd/coPrXOMqV7jMJS5ygfOc4yxn+IPfOc0pfuNXTnKC4xzjKEc4
zCEOcoD97GMve9jNLnayg+1sYytb2MwmNrKB9axjLWtYzSpWsoLlLGMpv/Az
S1jMIhbyEz/yA9/zHd+ygPnMYy5zmM0sZjKD6UxjKlOYzCQmMoHxjGMsYxjN
KEYyguEMYyhD+IbBDOJrBjKA/vSjL33oTS960oPuRBJBN7rShc50oiPhdKA9
7WhLGG1oTSta0oLmNKMpTWhMIxrSgPrUI5S61KE2tahJDapTjapUoTKVqEgF
ylOOspQhhNKUoiQlKE4xilKEwhSiIAXITz7ykofc5CInOchONrKShcxkIiMZ
SE8w6UhLGlKTipSkIDlBJCMpSUhMIhKSgPjEIy5xiE0sPgHDeZ5D
                    
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx113mUj1Ucx/EhIaSYqJC1QhLZGsQksiW0ICnZJSTZ10iKlIYQyb7GRGLI
NsYY+75kX8a+M2XP1r33c859n+45+ed3Xmd+y/M897t85GvW4a2WqSMiInqm
ioiwr//9lxx9p2jhUi2ut4z+r7t49zmWu+DG7v2Cvw/07tWjZKW7nYYE74/x
fjn91F9/fOmH4PMjvZe+PWdJ8bjRwfeN9S434Y+160uMD75/ovcHXZp+/OLe
ScHvTfHONfZUyt1RU4Pfn+Z9MKFttw31ZgTXM9PbffyxWcH1zfZulKnrl813
xgbXO8c7R4nbGYoPnxtc/2/eF4skVO9baF5wP3hzfOpvT3z9e3B/871j33xt
a83T84P7XeBtPpx1XtW44P5xO3P3j09fGDyPRd6vZ3h4TJ8H/wieDy4yrs7B
4y0WB89riXfG4sPz1ExaEjy/pd7nE3c1+63AsuB5Ynt12QcsD55vvPesMw3P
9j4WHzzvFd6rK9Qe9VfehOD549JfX140dVtCcB4rvadti9nXoN/K4HxwNveD
icF5YXMzueKPJAbnt8r7amznih2/XxWcJ25xPVuTp6OTgvPFu6IX9d9zKSk4
79XeVQa/O+Wb8auD88cLdtxKqlB7TVAP+Gn3g1j1sdZ7REt7R1j1ss77gbmH
Cjf4AKt+cKebfc1H1gf1hI9Xytt++TKs+trg/faQlUM/bYdVb3iVLa9cG4P6
wyVzp9mxeyNWPW7yntJ62pXBvbDqE0fOq5qtQpHNQb3iL/45XSZlP1b9bvH+
u7I9IKx6xs2+e65n/XJbg/rG5uLHPnQOq963eeeLWdj4cC2s+sf7SrkGCPoB
DzPVP+wOVn9s967Rt1CWtu9g9QtOVeDWpCqxWP2DF5unYY4g6Cfcsd1Pq240
wuov7H59Pla/4eS48idnZdwZ9B8e/Z470KAfcd37B9M2XorVn9h9XeSuoF+x
fVpZ2mL1L+5+sfbic4lY/YxdOef4M+hvfMZU17jPsPodTzxgGxar//G75nTr
5t8dzAP86DO2ArHmA17njg9rXuB+n9gJsCeYHzgq0t1xME9wiqnGmH1Y82Wv
94z3XUEF8wZ/mKqqaTGs+YNttz51FGse7fM2hx15IwprPmHXLjFY8wpHjxhU
etYZrPm13/tGVMM1A17BmmfY3c5orPmGW2vABPPugHce0+2PVseaf3iPHR8T
sOYh/v5T24BY8/GgdzUz/cwjCeYlvr/44WVdZ2DNT7zITCfTY8E8PeTtyqcB
1nzFz8783L4lmLfYfXvaw8H8xWZY2gkZzGNc270Baz7jtOUT57XJfCSY1zj+
yPBXK7fCmt+4qwZWMM/xj4/ZTyQH8x1faWXvGGve4zp2ujTDmv94dkZbcVj7
AKdrbDsGaz/g5qbaxp7C2hd4hR3XWY8G+wPnrGcnLtY+wd1cg2PtF7zTjqtR
WPsGF6tV1BwR1v7BQ8aP3FLwEtY+OuZ92rZrDqz9hCtXbmVGDNa+whPs13fE
2l/4ti3XcVj7DNd3BYtVLvj3b9P1X3ANa98d9858pEONSfmw9h82DyPL0Dew
9iG2w6lnD6z9iPPvnjm59TSsfYkVD7D2JzZfbgYS1j494V1m89HbRQtj7Vfs
1mM9rH2LL3W0Twhr/2L76auxWPsYaz1g7Wecus35k5vTnAz2NXbtUxxrf+Ml
djy+j7XPcXZztyMGYe13/JkrAKx9j7ekuba1fTLW/sfPme3yXqZT3soD+Ktf
VjepFoWVD/Cx2/YLsfICrugGKFZ+wD9NvGc2BFaewNf/tgMOK1/gt2w5RZ72
Vt7Ac1w6w8ofOINZfgltsfIIbuUaBiuf4MShdkFi5RWc++heM1Gx8ssZb7eO
c2LlGfznQHsAWPkGu/bthJV3sFtHE7DyDzbLzCwErDyE3eO9gZWPznpPyjd/
bkQBrLyEzc2ZlsLKT9iln55YeQrHPXEh/drpWPkKK/5j5S1s3jxm4j2s/HXO
e/0jtmCx8hh25VwfK59hM3xNhWLlNXworZ0AWPkNl3UPACvP4ZGzXzAb7Ly3
8h3+y66nElh5D7/hBjJW/sO/TLaBDSsP4gft+IjDyoe4abUoM6Kx8iJePsY2
+AVv5Uf8pD3eslh5Encx2+aHllj5Em+3cWAYVt7ERV3BYOVPPLi0TXRYeRSf
tOM620Vv5VNcyS0wrLyKf37eXgBWfsWuncZg5Vlsq/tWEla+xS5+pWDl3Uve
7nZzYeVf/NG6CyaRYeVh7NZjZ6x8jPO6BsPKy7j3imcGfrUJKz9jN75uYuXp
y96l3MLHytfYxd26WHkbu/LqjZW/cfVGxTo8OxMrj2P99x4rn2O9pgSv4b/w
78n/+/ovxGGj7w==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt0GdXDgAABeC3kFVRMsoshCRlRJSMFpnZK2RLRcrBb7MyywzZq2ggVMgK
ec6pD8+59369sUVlBaXBgUAgiPOcVs7Kc737Ahep4hKXucJVrnGdamq4wU1u
cZs73KWWe9znAXU85BGPecJTnvGcF7zkFa+pp4E3vKWRJppp4R3v+UArH/nE
Z9pop4MvfOUbnXznBz/5xW+6+MNf/tEd6DkniGD60Jd+hNCfAQxkEIMJJYxw
hjCUCCIZRhTDGcFIRhFNDKMZw1jGMZ4JxBLHRCYxmXimMJVpJDCdRGaQxEyS
SWEWs5nDXFKZx3zSWMBC0slgEZksZglLWUYW2eSQSx7LWUE+K1nFatawlnUU
sJ4NbGQTm9nCVraxnR3spJBd7GYPRexlH/s5wEEOcZgjFHOUEkop4xjHKecE
FVRyklOc4T+rH1qc
                    "]]}]}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJw10mdXDgAABeA3CskoQtkNI2RlZFVGySayZzKKelHoTVZWmRlFJYSQsjPi
HL+txwcfnnPu/XrPTSgI5pX2CgQCYfzlrFBJiD/6b7r5xU9+8J0uvvGVL3zm
Ex/5QCcdvKedd7zlDW285hUvaeUFz3lGC09ppolGnvCYBup5xEMecJ867nGX
O9zmFjeppYYbXOcaV7lCNZe5xEUucJ4qzlFJiIp/23CG05RTxilOcoIgpZRw
nGMUU8RRjnCYQxRykAIOsJ997GUPu9nFTnawnW1sJZ8tbCaPTWxkA+tZx1rW
sJpV5LKSHLJZwXKWsZQsMslgCYtZxEIWkM585jGXOaQxm1nMZAbTSWUaU5lC
CpOZxEQmkEwSiSQwnnGMZQyjGcVI4oljBMMZRixDGUIM0QxmEAMZQBT9iaQf
felDBOH05v/3ewC+zUiL
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV1FWYFgQQBdClu7t36e5ulm5YumHpXLpbCSWU7m4MukNpFJTuNEilGwQ8
/8OZ+z4z3w0JjwjrFSkoKGiQEcjIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJLyLoTR/60o/+DGBg
4LYMZghDGcZwRjCSUYxmDGP5gi8Zx3gmMJGv+JpJTGYKU/mGb5nGdGYwk1nM
Zg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHer7je37gRzawkU1sZgtb2cZ2
drCTXexmT2AXnn2v3Md+fuJnDnCQQxzmCEc5xnF+4VdOcJLf+J1TnOYMZznH
eS5wkUtc5gpXucZ1bnCTW9zmD/7kL/7mDne5x30e8JB/+JdHPOYJT3nGc17w
kle85g1vecd7PvAfH/nEZwIFEInIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJoMAj6E0f+tKP/gxg
IP8Dr+ieCg==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    
                    LineBox[{375, 378, 
                    376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 94, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[94], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092571323570013`*^9, 
  3.7097857830461884`*^9},ExpressionUUID->"7a3cb699-fdd2-4b9c-8c82-\
f2c76914b5ee"]
}, Open  ]],

Cell[TextData[{
 "\n",
 StyleBox["Neural Networks Algorithm", "Subsection"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.7091712130014267`*^9, 3.709171225468382*^9}, 
   3.709256190671692*^9},ExpressionUUID->"2bf2cf3e-02ae-4522-958e-\
b4f65128cc29"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classifier", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"training", ",", 
     RowBox[{"Method", " ", "\[Rule]", "\"\<NeuralNetwork\>\""}]}], "]"}]}], 
  ";"}], "\n", 
 RowBox[{
  RowBox[{"testing", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testResults", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"classifier", "[", 
        RowBox[{"Keys", "[", "#", "]"}], "]"}], "\[Equal]", 
       RowBox[{"Values", "[", "#", "]"}]}], "&"}], ",", "testing"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.709171323715939*^9, 3.709171328751216*^9}, 
   3.7092548436140842`*^9},ExpressionUUID->"fa78b55b-3641-4cda-85e1-\
46b05f657a2f"],

Cell[TextData[{
 StyleBox["Performance Measure calculation.\n", "Subsection"],
 StyleBox["Accuracy ", "Subtitle"]
}], "Text",
 CellChangeTimes->{
  3.709171259666933*^9, {3.7092566067181177`*^9, 
   3.709256607369011*^9}},ExpressionUUID->"3261fdb8-228a-47ac-ae9a-\
e0716c3286c1"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"classifier", ",", "testing", ",", "\"\<Accuracy\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{
  3.7092566198808002`*^9},ExpressionUUID->"08d86371-1d42-4639-81e4-\
e9115e6b18c8"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox["0.6407506702412868`",
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 98, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[98], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257133660084*^9, 
  3.709785784108251*^9},ExpressionUUID->"1752a10f-ace7-4e4d-ba50-\
b73c1433b2b3"]
}, Open  ]],

Cell[TextData[StyleBox["Precision", "Subtitle"]], "Text",
 CellChangeTimes->{
  3.709256633216111*^9},ExpressionUUID->"715cf737-f625-40b3-8def-\
2d0867317682"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Precision\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.709256646061101*^9},ExpressionUUID->"309eaa80-fb72-4ca1-9dd6-\
26ab7674f6f1"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "0.6214511041009464`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "0.8048780487804879`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "Indeterminate"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "0.6`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 99, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 99, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 99, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[99], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257133694037*^9, 
  3.70978578413583*^9},ExpressionUUID->"be294aa1-ce96-4fa6-8e4c-856469e8cb41"]
}, Open  ]],

Cell[TextData[StyleBox["Recall", "Subtitle"]], "Text",
 CellChangeTimes->{
  3.709256662955867*^9},ExpressionUUID->"882d3ac4-aad0-48ab-a551-\
7bb670b3e471"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Recall\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256707643255*^9, 
  3.709256711937221*^9}},ExpressionUUID->"dfef2f7d-282c-4ca4-9cd0-\
685e614c2552"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "0.9704433497536946`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "0.21153846153846154`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "0.`"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "0.8181818181818182`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 100, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 100, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 100, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[100], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257133740896*^9, 
  3.7097857841649075`*^9},ExpressionUUID->"5caa4fe1-71a8-4126-b1b4-\
97010544b41f"]
}, Open  ]],

Cell[TextData[{
 StyleBox["ROC Curve", "Subtitle"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.709256725526145*^9, 
  3.7092567266139717`*^9}},ExpressionUUID->"18aed57b-5976-4243-a5a2-\
521b2d41b106"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<ROCCurve\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256739904914*^9, 
  3.7092567623294687`*^9}},ExpressionUUID->"ed6fb792-3903-4958-91ab-\
4b0756de61a5"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11wlwjWcUBuCgUooJKUXVWq0y1U1LtcztKKVltLZq1dLaWlO1DZpiaNVu
UKohSmpNozEhiC1NZN8T2RcJkRCJRHIVtQ2d3nOOOe84t30nM5knN/f//+/7
zjnJ7Thx5vApdT08PHzqeHjQ9//Lyva5z03tPtfxqJepPzh4+s3W/deb1zer
p31Jv+Fnft9f7bvw6S9O/r7LvH+v2idmQ5X3kQBzvf3qMY3qz50eEWSuH6z2
7xr+T9nkQ+Z+IeoNad+67nDY3P+oesns11b1mRVqnueYelaLmiFX/j5unu+k
2nWzZr4LT5nnDVMPHzcxr1+dcPP8Eep367T91bnitFlPpHpbVvXLQz2jzPrg
TZ3fd31Fm/XCa+cH3Ly3NsasP1b9Y2K90ZnpsWY/4tSL6HbN4s3+wK7Ftlk8
MsHsF8wvb0k0+5ekntL0uwvdziaZ/UxW8/a1TTH7C398tMe+/AmpZr/T1EM9
Nz4evDvN7H+6euAntdOWlaeb8zij7kDb1TzDnA/8jGt1W0MzzHllqlt14R02
5wc3zwi5O+NOpjnPLDVvj1+WOV+4SSevsQPezjbnDTdM6bvuUHG2Of8cdX0+
QFjqAebtaJ9r6gN+EJfU4XokLPWSp743484w15GY+oFvtaQNyjf1BF+PHEUn
bOoLptPzf6/A1Btc7X3kqScqYam/QnVFWOnAeathqUf44mT+galPuKSJ44/B
qbDUa5G66Ng39GXqFy6YsL1xJ69iU89wTgM+QFPf59RcPsNgqXc4dcwLOyfd
gKX+z6uT6Lg3w9IPcNyB5XXf6lli+gOO4uOBpV8uqCdwwcDSP/C5bFogLP0E
f8aPD0t/laoLF/W6H/gSLP0G0+rGL4Gl/2Bpb1j6ER6xgCq8zPQnzJefDUu/
wh8+++Lt16Nh6V84neh90fQzPIQPEJb+hpM7UIfA0u/woHmrP21U/5Lpfzie
2ncULPMA7t/uxJr5AbDMBzh6Dq0QlnlRrn4n4bKrw2CZHzC361ZY5gnclxse
lvlyWR0WSwUKy7yBe7emFcAyf+Dj3J6wzKMK9Ru8QFjmE8zTZREs8wp+9etd
369Pg2V+wdyO7SrNPIO7c0HCMt/gA1/RQINl3sHdqN2aXjHzDw5sRh0ByzyE
n6f2CIFlPsJ7T9EBVJl5CXM5j4BlfsLU3df2wDJPYS6/m7DM12o1Tc+xA2CZ
tzCXiy8s8xf2C/3IVaKwzOOr6pZ0vL1gmc/wL+OpomGZ1/CTXCCwzO8aNU3r
HV1hmecwb98CWOY7TH/cG6TAMu9hXm6bWjP/YZoOc6fD8veg1tGK4+N41KvU
3pxN5vWtbm5AywuvdbTj+Kvl/bvVLTj71PL+QHUbTpC5XrB640+UQ+b6h9Wb
f6YcMfcLVW/xpRwz9z+h3uZHOWmeJ0y9YzvlT/N8Eeqdv1FOm+eNVA/jRJnn
j1ZnZ1GizXpi1CM5sWZ9ceq8XEqcWW+8ejQnwaw/UV1YQEk0+5GkHsNJNvuT
oi4uoqSY/UpVj+Okmf1LV5ecp6Sb/TyjfoWTYfYX/usaJcPsd6b6cAgl0+x/
lnoOJ8ucB9yDk23OB755g5JtzitHHXqUkmPOL1c9j5NrzhPuyckz5wvfvkXJ
M+edrz5xnJJvzr9A7cOBpR7g3pxCUx/wvbsUWOrlrDrsFAWW+ilSL+TAUk/u
lv9f4RX032sTp6MPp1gt9Qc/uE+BpR7PqSPCKbDU53n1Yg4s9QpLStRSv7BM
3wtqqWf4cw4s9Q1HRVJgqXe4I6dULfUPL/2BAks/wGWlHLX0R5m6HweWfoH3
7KbA0j9wPc5FtfQTPIkDS3/BsTEUWPoN7sy5pJb+g5cvo8DSj3D5JY5a+rNc
PYADS7/CAfsosPQv7Mm5rJZ+hqdyYOlvd8vnNacjIZ4CS//DXTgVapkH8KqV
FFjmA1xZwXHzY/yBy/lwflSqB3HcLZ8nnQ/nC7w/kALLvIEbcq6oZf7A0ziw
zCM4OYkCy3yCu3Gq1DKv4LVrKLDML7i6iqOWeVatHsyBZb7BB4IosMwzdy8N
og8ATkdjzlW1zDt3y+d1p2M6B5Z5CKelUmCZj3B3To1a5iW8fh0FlvkJ19Zw
1DJPa90sc/GaYygHlnkLHwymwDJ/YS+OUy2BZ3Jgmc9wxhkK/N/fbfD6v0oA
O6E=
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0WdbDQAAhuFzGiQje0adzOwK2S2yVyoaVkloyYhf5g8kKTOJZJSQMpMV
Ivd1+XBfz/v9DZXU5FSHBQKBIFe5bFyhjktc5ALnqeUcNVRTRSUVnOUMpynn
FGWcpJQSTnCcYxzlCMUUUUgBhzlEPnnkcpAcDrCffexlD7vZxU52sJ1tZLOV
LWSRSQbppLGZTWxkA+tZx1pSWcNqVpFCMkmsZAXLWcZSlrCYRBaxkAXMZx5z
SSBEPHHMYTaxzGImM5jONKYyhclMYiITGE8M4xjLGEYTzSiiGMkIIokgnDCC
wf9HD8tf/jDEb37xk0F+8J1vfOULA3ymn0985APvecdb+ujlDT285hUv6eYF
XXTynGc85QkdPKadRzykjQe0cp8W7nGXO9zmFjdppokbNHKdBq5Rzz8calTe

                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJxl1wdUVmUYB3A0syxbUlaWpu2sbKhZWmE2tKVpVpZmZTla4s6ZiWaCpuZO
0UjcExABB3vIEgGV4QBkL8VRgrPe5/45z//4ft+553B+fN93733f5/88F9oM
8uwzuKGbm9uEBm5u8tN+Lf3l3ahHCkZ52G6x5jVzTPS41j7qO7sEuncJXGi9
v1w9v/G35vCrt5e6qOtIvxc/mONinM9fvdTzwhLPC+vUOP8m9aoc75U53lut
8wWoM1vfYo4g6/w71B85r53W9ULUuXL6lWHW9XerB0SU9I8o2WPdT7g6/+zT
5oi07i9KLXfj3iXaut8Y9Tn5en6Mdf+x6o49pnfoMT3OWk+8etygx8yRYK2P
DpucEjo5ZZ+13sT6ei1Qh3858Nlnli1V4/O+LpazL/FMUmO/ktXO7buneMy4
vduNbWb4qXG91epNp/uOb/vyWjWuv16dnj60vP0/G12MetBTZHmhqWrUZ7/a
+Xj/NDXqdUCNbkhXo350GylXJo16Zqi7ORtAo76Zaqc842jUm5bqduhxUI36
0872tjikRh7o+J7VcT2raeTjsLpUlh9BIy9Z6htkufNp5Id2bn9Qthp5op3b
6ZCjRl5o5/SNc9XID+3jfJxGno6oN2+SF408HFU75Z9MIx+07E5cz2NWXmin
Wq2PW/mh2zmBoZGnPHUv5wI08pWvHuEsmEbeCqz9o5G/gvp+2qL+N2Biv1e2
bFOjvwLUcxPf+uahoEA1+i3IxagPjXzTqNcJNfJOo3408k+jnjT6oVCN+tLo
Dxr1ptEvNOpfpEb/0MgDjX6ikQ8a/VWsRl5o9BuN/NDoPxp5KlGjH2nki0Z/
0sgbjX4tVSN/NPqXRh5p9DONfJap0d808kqj32nkt1yN/NLIG4280cgbjbxV
WHmjkTcaeaORNxp5q7TyRiNvNPJGI2808lZl5Y1G3qo8TLPe//itwWo833a6
GHmkkUcaeaxWI4/VHjs2fHroqe9CXIx80sgnjXzSyOdJNfJJI5808kkjnzTy
eUqNfNLIJ4180sgnjXzWqJFPGvmsqf97IVSdcM/Xc55LCFNjnu5S58764Y0X
Htyjxnzdq66uG3u588/haszbCPV/w6YGexyJVGP+Rqm95fT3Rasxj+kFD79t
jhg18kP7Hnv/1KM/xaqRpzj12kV93nliLY18xKu3v/fJuicP0tivBHVYowEN
2zXYZ+0fHb1XfpFo7SedMmbw7uc/T7L2lzYXa95xdrK13ynqvOLhozrtSrH2
P1Vd5js67aWyVKse+9VnZLl3pVn1oS82nTLz1dcPWPWivQrlgulW/Wjz5b/+
PpBu1TNDPXv5m/tXD8mw6kvPP9/9kv+VDKvemerFUr5FmVb96T+3OQW08kCv
uqnXr+tjaOTjkNp/SG8puZUXekPMhyc2nqaRn8PqLa0+vm3zbzTyRAfKdrfK
svJFh2R99v3WnTTylq024TFLpJE/OnLuF/u2F9HIY446rvIrU3Ia+aSTpBx3
5Fp5pU3xzAbRyC+dedUJjJVnOttZHo18H1UfDflRDivvdEGzEU3CGh2z8k+X
yMdX0OgHujJZFnTc6g/ahGXhniQa/ZKnPuc1wWwpjf6h6/Im1YTX0uinfLW5
WMvIuTT6i54mcW5WYPUbPV0uP5BG/9Em3CagNPqRnnU41iSARn+eUPtcFz+t
sCuNfqVNWExiaPQvPc+JH41+pv/4Xb5QaPU3LZtfPJxGv9NLKqSANPqfXnZ3
6s2l1xdZ84BeIcvpTWM+0CslLr405gUtw21oOY35UaxeLW+3pzFP6DVXMkyH
0JgvtBkWiyuSacwbeqOMi+Yl1vyhzewxBaYxj2jTfKYDacwnOqAo+0xVHY15
Vao2s8F0LI35RZswP3ByHo15Roc67U1jvpWpTe+agtCYd/ReiccoGvOPjqiV
BqQxD2nprhFNyq35SMfKdvelMS9p6Y6RfjTmJy3pP1NFY55WqJPl9jvRmK+0
pPecF415S0s6R6fRmL90hvDeSmse05KuMYNpzGc6S8ZDAI15TeeYdIy9TGN+
V6ml+ue705jn9HFpt4U05jud74xPGvO+Wi3VGd+WxvyniyW+Y2k8D2jZ3QnR
NJ4PtOzexaYnrecFXSVx6Efj+UHL6i/503ie0LK6STU0ni+n1GdlezvTeN7Q
cndTZtJ4/tC1zp9PNJ5H9AW53ZY11vOJlm9fHUbjeUVflfEVTOP5ReP/2tMu
xv+/9LU/7Zf9Ps/3P7PG5jE=
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV0EAQYBeCN7u6NGN2dI0Z3jm4YXRswGosOJQw6lO5QusMApUNpDLo7
Dfx2ePjOPf/zPfcPiYgKj4wVEBAQyNDA9xlzxyYOcYlHfBKQkEQkJglJSUZy
UpCSVKQmDWlJR3oykJFMBBFMZrKQlWyEkJ0c5CQXuclDXvKRnwIUpBCFKUJR
ilGcEpSkFKUpQ1nKEUp5KlCRSoRRmSpUpRrVqUFNalGbOtSlHvVpQEMa0Zgm
hNOUZjSnBS1pRWva0JZ2tKcDHelEZyLoQle60Z0e9KQXvelDX/oRSRT9GcBA
ohnEYIbEdMswhjOCkXzAh3zEx3zCKEYzhrGMYzwTmMgkJvMpnzGFqUxjOp/z
BV/yFTOYySxmM4e5zGM+C1jI13zDIhazhKUsYzkrWMkqVrOGtaxjPRvYyLd8
xyY2s4WtbGM7O9jJLnazh73sYz8HOMj3/MCP/MQhDvMzv3CEoxzjOCc4ySlO
c4az/MpvnOM8F7jIJS5zhav8zh/8yV9c4zo3uMktbnOHu9zjPg94yCMe84Sn
POM5L3jJK17zhrf8zT/8y3+8I2b8gcQiNnGISzzik4CEJCIxSUhKMpKTgpSk
IjVpSEs60pOBjGQiiGAyk4WsZCOE7OQgJ7nITR7yko/8FKAghShMEYpSjOKU
oCSlKE0ZylKOUMpTgYpUIozKVKEq1ahODWpSi9rUoS71qE8DGtKIxjQhnKY0
ozktaEkrWtOGtrSjPR3oSCc6E0EXutKN7vSgJ73oTR/60o9IoujPAAYSzSCG
Myzw/W//H7ksnhA=
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV1Gd7CAYUBeCYiR3EihkhNjGCmAmRmEEkYpOYERIjKGp30kGH0WF075qt
PTrMlpaWDltLBy3aatV88+E99wec59yw9OykrDwBAQHTRO7NSz7yU4CCBBJE
IQpThKIUozglCKYkpShNCGUoSznKU4FQKlKJylShKtUIozrh1KAmEdSiNnWo
Sz3q04CGNCKSxjShKc2IojktaEk0rWhNG9rSjvbEEEsHOhJHJ+JJoDNd6Eo3
utODRHrSi94k0YdkUuhLKv3ozwAGMojBDGEow0gjneGMYCSjGM0YMhhLJuMY
TxbZTGAik5hMDlOYmtstDzCdGczkQWYxmznMZR7zWcBDPMwjPMpjPM5CFvEE
T/IUT7OYJTzDszzH8yxlGctZwQu8yEu8zEpWsZo1vMKrvMbrvMGbvMXbvMO7
vMf7fMCHrGUd69nARjbxER+zmS1sZRvb2cFOdrGbPXzCp3zG5+xlH/s5wEEO
8QVfcpgjfMXXHOUY3/AtxznBd3zPD/zISU5xmjOc5RznucBP/MxFLvELv/Ib
v3OZK/zBn1zlGtf5i7/5hxv8y3/c5H9ucZs73OUeuePPQ17ykZ8CFCSQIApR
mCIUpRjFKUEwJSlFaUIoQ1nKUZ4KhFKRSlSmClWpRhjVCacGNYmgFrWpQ13q
UZ8GNKQRkTSmCU1pRhTNaUFLomlFa9rQlna0J4ZYOtCRODoRTwKd6UJXutGd
HiTSk170Jok+JJNCX1LpR38GMJBBDGYIQxlGGukMZwQjGcVoxpDBWDIZx3hy
n3c2E5jIJCaTw3SmMJX7pnSeCg==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJxt1nmUj1Ucx/FRSCGUECFEJUJRQqYNKWQNkUohZM0yKlEkJSFLk30iZN+X
YYax7zvZ932vlCjqud/POfd9XP3+cV7HOc88z73f5ZOvcZuaTW6LiYmJSxUT
4/4Nf881TtX5WoGmsTe7k/f0O5/f/ffQ7sH/97rFdey3I/ZmH4/dnJiS9erk
Pt56Xv9brKddiv2rVL5HPn5roLeeN8S797eHV3Q5Fe+t5w/zznEy4d24diO9
9fzR3tvzzuhe9npC8PfGeD9QZcCmxJSxwd8f5/1eXLs8ZXqND95ngvfksTVa
LXhlYvB+k7wvby6xqHSmKcH7TvUudz1L+vnbpgXvP917afS0XFVmBN+DTxRu
XrvB1JnB983yvss9LvPs4Hvx43Urj9nTfk7w/XO9a0Zfl3PH3OA85nl36vHo
b/Wfnh+cDx76g/stCM4r0Tt5mvvgxOD8FnofiZ6Wo9Gi4DyTvNPuO92v3pKk
4HyTvQtHbxeff3Fw3vjh1E0utnxhSXD++JlMuZf1+X1JcB8p3q/m3DFk0tiU
4H7wmwX7tlhXZ2lwX7hN8Qrlz6ZdFtwf/qyse+FlwX0u9x5Ycc7xws2XB/eL
f3LHnXNFcN94XkP3giuC+1/pvabZ/re//gSrHvDe9oNLTiy6KqgPfL5r1XRr
D2DVy2rvf3uniW4Qq35wlkFJUYWsCeoJFxjVMXoiVn2t9S41sWj0xVj1hiu5
46u9Lqg/XH/JiBu906wP6hG3XFdn64S5WPW5wbvrzozjVjfDqlfcz31ujo1B
/eKEc+4Asep5k/esK65gsOob23Vm2xzUOz6bttaxWa2x6h93yFBs44ursPoB
25/LuyXoD9wru/sgrH7BehxW/+D4/O6Ctwb9hF233Ps5Vn9hu/49WP22zftJ
+2H1H44uM3pDrH7E7mm1jmH153bv6PAuHSmH1a/Y2nEwVv/iQ9W6Lb/tAlY/
7/B2X/tdRaz+xlYuo7D6HbvTm3kFq/93elu5VMeaB9huYwLWfMDZ2o6PavCX
YF5ga9/6WPMD2/XOxJon2FVLlvS7gvmCy1gBYs0b7KqvxCKs+YPtOrLuDuYR
dtVcoxXWfMKNhn8ZPRFrXmFr9zx7gvmF7fg6Y80z7LptwCas+Yajy40qem8w
77Dr3hndseYf1udizcN93ta+JbDmI46GX1QwWPMSF7MGwZqf+73t9cpizVNs
7TYIa77iqFZ6jj6HNW8PeLvpV7wC1vzF9rgRWPMYW3v8iTWfD3pfuFypyKFq
WPMau+ncdjzW/Mb691Awz3E0HNxfCOY7/sqVez2seY+tm3pizX98jxUI1j7A
ug6s/YCHZXYVdDjYF9jGTyms/YEfsgGCtU9wVGyuw4L9gqe49kjE2jfYTZvs
J7H2D37KFsyRYB9hu75YrP2EFxdyF4K1r7CNq3is/YVfLuI2AFb74wxqoGC/
HfXe4topN9a+w24a162Mtf/wG259dMTah9iOLwFrP+Kj5VzFYO1LbOPtGtb+
POb9QdRdyYWw9ikurgcG+xX/4dqvG9a+xW5bDZmEtX/xp9YgWPsY2+ulPh7s
Z3yHDRisfY1tHDbE2t+4fz03cLH2ObbHzcHa7/h+aw+sfY9tm2c84a39j390
66kMVh7ATe2HlQ/wY/bBWHkB2/hMxsoPeHZrd8NYeeKkd5wa2Fv5Aj9rAwsr
b2Abp22x8gde6dbZcKw8gt3pjVuNlU/wa65cLmPllVPeNv7yYeUXvCvaXl2r
YuUZbPGiC1a+we/YC2LlHaw4jZV/8Bm3/m5g5aHT3lZ9hbHyEf7QBgxWXsI2
Xnpg5Sf8z1C3QLDyFFYcwcpX+At3fOnOeCtvYRsHJbHyF77bAgxWHsOuewv2
xcpn+Hv3uQuw8hpW+2LlN/ygFcxZb+U5bPGlPFa+wz+712uBlfewtdsQrPyH
n7CBj5UHsZt+TS5i5cNz3gvd43Jh5UVs7VEJKz/il9y474CVJ3E6BTxv5Uu8
Yb37Ya1LbOV8FSt/nvd+3S4YK49iixs1sPIpPujeritWXsVWfhOx8it+3wY0
1ufiIlpI3sq3+NcjbgFj5V1s5dIAK//ijyxgYeVhbNt3FlY+xrdbPMXKy9iu
N8NFb+Vn/I0bV6Wx8jSurgL0Vr7G91nDYeVtbNeRhJW/8UgbL/j//w1//P9/
Ci2riA==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV0EAQYBeCN7u7cRnd3jBGja3TD6NroklDSAFu6u7s7DMIApbtTKSWU
kG+Hh+/c8z/fc//gyOiIqFgBAQGBDAt8nzF3bOIQl3jEJwEJSURikpCUZCQn
BSlJRWrSkJZ0pCcDGclEZrKQlWxkJ4hgQshBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmVCqEEZVqlGdGoRTk1rUpg51qUd9GtCQRjQm
giY0pRnNaUFLWtGaNrSlHe3pQEc6EUlnutCVbnSnBz3pRW/60JcooulHfwYw
kEEMZghDY/plOCP4gJGMYjRj+JCPGMs4xjOBiUziYz7hUz5jMlP4nC/4kq/4
mm/4lu+YyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxzie37gR37iMEc4yjF+5hd+5TeOc4Lf
+YOTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84A/+YuHPOIxT3jK
3/zDM57zgpf8y3+84jVveMv/xIw/kFjEJg5xiUd8EpCQRCQmCUlJRnJSkJJU
pCYNaUlHejKQkUxkJgtZyUZ2gggmhBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVCaUKYVSlGtWpQTg1qUVt6lCXetSnAQ1pRGMiaEJT
mtGcFrSkFa1pQ1va0Z4OdKQTkXSmC13pRnd60JNe9KYPfYkimn70ZwADGcRg
hgS+/+1DeQc5DJ6E
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJxt13mYzlUYxvEhQhSRNcVEWmRNRcpEkbRJpRChUCoqS4RIoiIpxjpZI2vW
se/Gvu+y72MbSwui1O8891zneznT/DPXZ17vbznnOc9zi23cslaT9DExMe3S
xcS43+FPn49f3vzYiKZx17ttGlfLW7/15qqz4q73Su8I7i/B5zvjzsRfS0i5
3CWNjXn3eev7h1K/39273ItjM/Z6plca29frH/XW9ZNTr9cnjUvNPTGyZ8lT
cZUy3PdI7vV901jPk5J6//7ehw92eu/tNoO8db8E7+4Ltgybfscwb91vuHfu
9bmap3trpLfuN8q7WUX3l9HB/cd4zxn3ztCaWccGzzPOO2u+vuXbHRgfPN9E
7/r2gJOC553s/fqVVjOPPDkleH78eZmvv7g0aWrwPtO8x7vHyzc9eD+8Nbpb
oa4zgvdN9P57x6pTZc8kBu8/0/vuW/bPqlZ7VrAes71fqPp7t7qL01rVez51
veZ4f9Ixc60W98/11vrh4e5x+83z1nrO914dPW38Naz1XeD9W2z16BEXemu9
F3nfXsd9A2v9F3vf5b4+FGs/cPSPoyVa4q39wc923tC2Y+al3tovfKCAewCs
/Vvm3dpugLWf2K3e4HuSvLW/+MeUyzl+2ou138u9y7rH/R5r//GKom7DV3ir
HnC9xQOTllzFqo+V3ufqFZmwdgpWvazy7hbdfXsTrHrBVg4FVgf1gyeVXNbg
5EaselrjXXnN89EVseoL72iyq/g/FdYG9YajzcqZ6RxW/a3z/jfBLTBWPWJ7
/Drrg/rE925LHy3xhqBe8fyW304suQyrfjd6v2QvhFXPuJXbrjybgvrGj4/I
U7rYR1j1jjPZBmLVP3ZXL11sc3AecMI3x7MkdsE6H7ipW/49WOdli3f0cOcX
PoR1frC9Th+s84SXL7kaVTTW+drq/V12VyFY5w3b1YZhnT/sqvu1K1jncZv3
WXf8XsE6n3h2tdoDGk3GOq+4a78h0QpuD84vfs4OBNZ5xnltAbHONz7kjlP+
HcF5x/Z6rbDOP26T/2KNzhuw+gF+wh54Z9Af8E2JXaKKwOoX2I7Hfqz+scvb
7Wbf8lj9BL9r/wCrv+AHraCx+s2v3lFxXoitjtV/8MoehY+NGYnVj/AP212D
wepPu73fsALC6lfYyn8aVv/C7tO52fYE/QzPy9ZhdFwzrP6Gv6zrNgyr32Fr
dwX3Bv0P2/a3xeqH+Ki1A6z+iH9xu1V8X9AvcTs70Fj9E1cp0TA6Alj9dL/3
ze71K2L1V7zTHYd4rH6LrT2ex+q/B7zd6blYA6sf44ej3ekwGqs/Y/0+GPRr
HBVX+yolsPo3tnKpi9XP8eQ/kt9f2QOrv+N4114Ssfo9/lQLHPR//GZU7L2z
HwrmAX7KGgbWfMCum+ZqjjUvsLWLAVjzA7vTPDAJa55g4wWs+XLYe6HbzkJY
8waPam8LEMwf/JU7/u2x5hH+wBoE1nzCGhdY8wrb8qQ7EswvXNAKFmueYTvO
9bDmG07O4how1rzD61z7n4k1//BU+xhrHuL+rlxyHA3mI7bjWQlrXuKGNuCw
5ie2dj4Qa55it7rpV2DNV5zDGi7WvD3m/ac7PoWx5i/e3dstONY8xotce+6A
NZ9x9LJRS8Wa11jjHGt+Yyuf9MeDeY6tnZTGmu+4gjVYrHmP7yxkK+Kt+Y9v
sAti5QF8wpYPKx9gO045k72VF7C1zzis/ICjzY46HFaewDZuB2PlC9zYGiTW
+MBP17Y7eCt/nPB+wAICVh7Bt9oGY+UTbOOzI1ZewS59zBmHlV+w4hZWnsF2
vDKc9Fa+wT1duy2DlXfwh24cNsDKP/hVCwRYeQg/ai+AlY+wygsrL2FrN7lO
eSs/YRs/lbHyFHbdvlYLrHyFZ7g4NAQrb+FBSdaQvTXe8WcWALDy2Glva79F
sPIZtnFcEyuvYZu+nbDyG7bLT8DKc/iyxWGsfIf3ufaT8Yy38h5eetUajrfy
H/7ZxZOGWHkQRxeLJhRWPsS23HOx8iLW8cPKj9jace4Ub+VJHGsBCitf4hvt
AbHyJj5d1g6Ut/In3uTKbw1WXMLWji5h5dOz3jaeimLlVWxxpRZWfsUWPztj
5VlcwwICVr7Fpey/K1h5F9+mgvFW/sV/uXFdDisPY4tvjbDyMbbb98bKy9jK
cT5WfsZqT/j/f4c/fP4fKpUCTw==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV0EAQYBeCN7u7cRnd3jBGja3TD6NroklDSAFu6u7s7DMIApbtTKSWU
kG+Hh+/c8z/fc//gyOiIqFgBAQGBDAt8nzF3bOIQl3jEJwEJSURikpCUZCQn
BSlJRWrSkJZ0pCcDGclEZrKQlWxkJ4hgQshBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmVCqEEZVqlGdGoRTk1rUpg51qUd9GtCQRjQm
giY0pRnNaUFLWtGaNrSlHe3pQEc6EUlnutCVbnSnBz3pRW/60JcooulHfwYw
kEEMZghDY/plOCP4gJGMYjRj+JCPGMs4xjOBiUziYz7hUz5jMlP4nC/4kq/4
mm/4lu+YyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxzie37gR37iMEc4yjF+5hd+5TeOc4Lf
+YOTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84A/+YuHPOIxT3jK
3/zDM57zgpf8y3+84jVveMv/xIw/kFjEJg5xiUd8EpCQRCQmCUlJRnJSkJJU
pCYNaUlHejKQkUxkJgtZyUZ2gggmhBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVCaUKYVSlGtWpQTg1qUVt6lCXetSnAQ1pRGMiaEJT
mtGcFrSkFa1pQ1va0Z4OdKQTkXSmC13pRnd60JNe9KYPfYkimn70ZwADGcRg
hgS+/+1DeQc5DJ6E
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx113mUj1Ucx/EhIaSYqJC1QhLZGsQksiW0ICnZJSTZ10iKlIYQyb7GRGLI
NsYY+75kX8a+M2XP1r33c859n+45+ed3Xmd+y/M897t85GvW4a2WqSMiInqm
ioiwr//9lxx9p2jhUi2ut4z+r7t49zmWu+DG7v2Cvw/07tWjZKW7nYYE74/x
fjn91F9/fOmH4PMjvZe+PWdJ8bjRwfeN9S434Y+160uMD75/ovcHXZp+/OLe
ScHvTfHONfZUyt1RU4Pfn+Z9MKFttw31ZgTXM9PbffyxWcH1zfZulKnrl813
xgbXO8c7R4nbGYoPnxtc/2/eF4skVO9baF5wP3hzfOpvT3z9e3B/871j33xt
a83T84P7XeBtPpx1XtW44P5xO3P3j09fGDyPRd6vZ3h4TJ8H/wieDy4yrs7B
4y0WB89riXfG4sPz1ExaEjy/pd7nE3c1+63AsuB5Ynt12QcsD55vvPesMw3P
9j4WHzzvFd6rK9Qe9VfehOD549JfX140dVtCcB4rvadti9nXoN/K4HxwNveD
icF5YXMzueKPJAbnt8r7amznih2/XxWcJ25xPVuTp6OTgvPFu6IX9d9zKSk4
79XeVQa/O+Wb8auD88cLdtxKqlB7TVAP+Gn3g1j1sdZ7REt7R1j1ss77gbmH
Cjf4AKt+cKebfc1H1gf1hI9Xytt++TKs+trg/faQlUM/bYdVb3iVLa9cG4P6
wyVzp9mxeyNWPW7yntJ62pXBvbDqE0fOq5qtQpHNQb3iL/45XSZlP1b9bvH+
u7I9IKx6xs2+e65n/XJbg/rG5uLHPnQOq963eeeLWdj4cC2s+sf7SrkGCPoB
DzPVP+wOVn9s967Rt1CWtu9g9QtOVeDWpCqxWP2DF5unYY4g6Cfcsd1Pq240
wuov7H59Pla/4eS48idnZdwZ9B8e/Z470KAfcd37B9M2XorVn9h9XeSuoF+x
fVpZ2mL1L+5+sfbic4lY/YxdOef4M+hvfMZU17jPsPodTzxgGxar//G75nTr
5t8dzAP86DO2ArHmA17njg9rXuB+n9gJsCeYHzgq0t1xME9wiqnGmH1Y82Wv
94z3XUEF8wZ/mKqqaTGs+YNttz51FGse7fM2hx15IwprPmHXLjFY8wpHjxhU
etYZrPm13/tGVMM1A17BmmfY3c5orPmGW2vABPPugHce0+2PVseaf3iPHR8T
sOYh/v5T24BY8/GgdzUz/cwjCeYlvr/44WVdZ2DNT7zITCfTY8E8PeTtyqcB
1nzFz8783L4lmLfYfXvaw8H8xWZY2gkZzGNc270Baz7jtOUT57XJfCSY1zj+
yPBXK7fCmt+4qwZWMM/xj4/ZTyQH8x1faWXvGGve4zp2ujTDmv94dkZbcVj7
AKdrbDsGaz/g5qbaxp7C2hd4hR3XWY8G+wPnrGcnLtY+wd1cg2PtF7zTjqtR
WPsGF6tV1BwR1v7BQ8aP3FLwEtY+OuZ92rZrDqz9hCtXbmVGDNa+whPs13fE
2l/4ti3XcVj7DNd3BYtVLvj3b9P1X3ANa98d9858pEONSfmw9h82DyPL0Dew
9iG2w6lnD6z9iPPvnjm59TSsfYkVD7D2JzZfbgYS1j494V1m89HbRQtj7Vfs
1mM9rH2LL3W0Twhr/2L76auxWPsYaz1g7Wecus35k5vTnAz2NXbtUxxrf+Ml
djy+j7XPcXZztyMGYe13/JkrAKx9j7ekuba1fTLW/sfPme3yXqZT3soD+Ktf
VjepFoWVD/Cx2/YLsfICrugGKFZ+wD9NvGc2BFaewNf/tgMOK1/gt2w5RZ72
Vt7Ac1w6w8ofOINZfgltsfIIbuUaBiuf4MShdkFi5RWc++heM1Gx8ssZb7eO
c2LlGfznQHsAWPkGu/bthJV3sFtHE7DyDzbLzCwErDyE3eO9gZWPznpPyjd/
bkQBrLyEzc2ZlsLKT9iln55YeQrHPXEh/drpWPkKK/5j5S1s3jxm4j2s/HXO
e/0jtmCx8hh25VwfK59hM3xNhWLlNXworZ0AWPkNl3UPACvP4ZGzXzAb7Ly3
8h3+y66nElh5D7/hBjJW/sO/TLaBDSsP4gft+IjDyoe4abUoM6Kx8iJePsY2
+AVv5Uf8pD3eslh5Encx2+aHllj5Em+3cWAYVt7ERV3BYOVPPLi0TXRYeRSf
tOM620Vv5VNcyS0wrLyKf37eXgBWfsWuncZg5Vlsq/tWEla+xS5+pWDl3Uve
7nZzYeVf/NG6CyaRYeVh7NZjZ6x8jPO6BsPKy7j3imcGfrUJKz9jN75uYuXp
y96l3MLHytfYxd26WHkbu/LqjZW/cfVGxTo8OxMrj2P99x4rn2O9pgSv4b/w
78n/+/ovxGGj7w==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt0GdXDgAABeC3kFVRMsoshCRlRJSMFpnZK2RLRcrBb7MyywzZq2ggVMgK
ec6pD8+59369sUVlBaXBgUAgiPOcVs7Kc737Ahep4hKXucJVrnGdamq4wU1u
cZs73KWWe9znAXU85BGPecJTnvGcF7zkFa+pp4E3vKWRJppp4R3v+UArH/nE
Z9pop4MvfOUbnXznBz/5xW+6+MNf/tEd6DkniGD60Jd+hNCfAQxkEIMJJYxw
hjCUCCIZRhTDGcFIRhFNDKMZw1jGMZ4JxBLHRCYxmXimMJVpJDCdRGaQxEyS
SWEWs5nDXFKZx3zSWMBC0slgEZksZglLWUYW2eSQSx7LWUE+K1nFatawlnUU
sJ4NbGQTm9nCVraxnR3spJBd7GYPRexlH/s5wEEOcZgjFHOUEkop4xjHKecE
FVRyklOc4T+rH1qc
                    "]]}]}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJw10mdXDgAABeA3CskoQtkNI2RlZFVGySayZzKKelHoTVZWmRlFJYSQsjPi
HL+txwcfnnPu/XrPTSgI5pX2CgQCYfzlrFBJiD/6b7r5xU9+8J0uvvGVL3zm
Ex/5QCcdvKedd7zlDW285hUvaeUFz3lGC09ppolGnvCYBup5xEMecJ867nGX
O9zmFjeppYYbXOcaV7lCNZe5xEUucJ4qzlFJiIp/23CG05RTxilOcoIgpZRw
nGMUU8RRjnCYQxRykAIOsJ997GUPu9nFTnawnW1sJZ8tbCaPTWxkA+tZx1rW
sJpV5LKSHLJZwXKWsZQsMslgCYtZxEIWkM585jGXOaQxm1nMZAbTSWUaU5lC
CpOZxEQmkEwSiSQwnnGMZQyjGcVI4oljBMMZRixDGUIM0QxmEAMZQBT9iaQf
felDBOH05v/3ewC+zUiL
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV1FWYFgQQBdClu7t36e5ulm5YumHpXLpbCSWU7m4MukNpFJTuNEilGwQ8
/8OZ+z4z3w0JjwjrFSkoKGiQEcjIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJLyLoTR/60o/+DGBg
4LYMZghDGcZwRjCSUYxmDGP5gi8Zx3gmMJGv+JpJTGYKU/mGb5nGdGYwk1nM
Zg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHer7je37gRzawkU1sZgtb2cZ2
drCTXexmT2AXnn2v3Md+fuJnDnCQQxzmCEc5xnF+4VdOcJLf+J1TnOYMZznH
eS5wkUtc5gpXucZ1bnCTW9zmD/7kL/7mDne5x30e8JB/+JdHPOYJT3nGc17w
kle85g1vecd7PvAfH/nEZwIFEInIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJoMAj6E0f+tKP/gxg
IP8Dr+ieCg==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    
                    LineBox[{375, 378, 
                    376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 
                    1.35 (CurrentValue["FontCapHeight"]/AbsoluteCurrentValue[
                    Magnification])}]], "GrayLevel[0.5]"], Appearance -> None,
                     BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 101, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 101, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 101, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[101], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257134086315*^9, 
  3.7097857844146805`*^9},ExpressionUUID->"0572d65c-739b-4f5a-804f-\
bef48a8a29f8"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Nearest Neighbors Algorithm", "Subsection"],
 "\n\n"
}], "Text",
 CellChangeTimes->{{3.7091712975793667`*^9, 
  3.7091713047527323`*^9}},ExpressionUUID->"cc5467f7-7926-40a1-a478-\
9a01bfd9bf0e"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"classifier", "=", 
   RowBox[{"Classify", "[", 
    RowBox[{"training", ",", 
     RowBox[{"Method", " ", "\[Rule]", "\"\<NearestNeighbors\>\""}]}], 
    "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testing", "=", 
   RowBox[{"Take", "[", 
    RowBox[{"examples", ",", 
     RowBox[{"{", 
      RowBox[{"1", ",", 
       RowBox[{"-", "1"}], ",", "5"}], "}"}]}], "]"}]}], ";"}], "\n", 
 RowBox[{
  RowBox[{"testResults", "=", 
   RowBox[{"Map", "[", 
    RowBox[{
     RowBox[{
      RowBox[{
       RowBox[{"classifier", "[", 
        RowBox[{"Keys", "[", "#", "]"}], "]"}], "\[Equal]", 
       RowBox[{"Values", "[", "#", "]"}]}], "&"}], ",", "testing"}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.709171348400975*^9, 3.7091713620184507`*^9}, 
   3.709254836445594*^9},ExpressionUUID->"ebdcf738-5e9d-436a-b920-\
b200c7401ea8"],

Cell[TextData[StyleBox["Performance Measure calculation.", "Subsection"]], \
"Text",
 CellChangeTimes->{
  3.709171388812496*^9, {3.709256840967701*^9, 
   3.709256841816496*^9}},ExpressionUUID->"bd2c90fd-e1f2-484d-b5ad-\
a15940e0e497"],

Cell[TextData[{
 StyleBox["Accuracy ", "Subtitle"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.709256861764917*^9, 
  3.709256862926746*^9}},ExpressionUUID->"68e06f44-4ee9-409a-9490-\
af87da6cfbfa"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{
  RowBox[{"ClassifierMeasurements", "[", 
   RowBox[{"classifier", ",", "testing", ",", "\"\<Accuracy\>\""}], "]"}], 
  "\[IndentingNewLine]"}]], "Input",ExpressionUUID->"4a33d7ae-37ed-4ca9-8cc0-\
bbb70cb0a879"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox["0.9571045576407506`",
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 105, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[105], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.7092571353481197`*^9, 
  3.7097857853647413`*^9},ExpressionUUID->"ec732b93-152e-4c09-b597-\
82f0c42751b0"]
}, Open  ]],

Cell[TextData[StyleBox["Precision", "Subtitle"]], "Text",
 CellChangeTimes->{
  3.709256890278777*^9},ExpressionUUID->"9da6d066-8154-47a3-bad5-\
8a67845fb6ac"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Precision\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256897301775*^9, 
  3.7092569018345833`*^9}},ExpressionUUID->"5c62d7d9-0419-4599-b7db-\
ec248669f3d9"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "1.`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "0.9333333333333333`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "Indeterminate"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "0.6153846153846154`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 106, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[106], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.70925713539005*^9, 
  3.7097857853988314`*^9},ExpressionUUID->"d792a044-0d09-4023-a492-\
777419669307"]
}, Open  ]],

Cell[TextData[{
 StyleBox["Recall", "Subtitle"],
 "\n"
}], "Text",
 CellChangeTimes->{{3.709256921795253*^9, 
  3.7092569235641727`*^9}},ExpressionUUID->"c53b957f-14f9-41b2-8171-\
b52146278f19"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<Recall\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.709256930257225*^9, 
  3.709256934782475*^9}},ExpressionUUID->"365e1f51-4e2a-4f99-9fa4-\
db5894f32076"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", "0.9605911330049262`"}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", "0.9871794871794872`"}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", "0.`"}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", "0.7272727272727273`"}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", "Indeterminate"}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 107, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 107, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 107, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[107], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.70925713543435*^9, 
  3.7097857854329286`*^9},ExpressionUUID->"f7c39b8b-93e3-4ada-9395-\
b0876457dae3"]
}, Open  ]],

Cell["", "Text",ExpressionUUID->"37ccb613-941c-41af-bb04-b811609f1198"],

Cell[TextData[StyleBox["ROC Curve", "Subtitle"]], "Text",
 CellChangeTimes->{
  3.7092569487200203`*^9},ExpressionUUID->"88d8389b-f15c-4b52-9949-\
faadc8aa7028"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ClassifierMeasurements", "[", 
  RowBox[{"classifier", ",", "testing", ",", "\"\<ROCCurve\>\""}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.7092569865175753`*^9},ExpressionUUID->"d46dec02-da3e-40f9-bca2-\
9d466263c28a"],

Cell[BoxData[
 InterpretationBox[
  TagBox[
   FrameBox[GridBox[{
      {
       ItemBox[
        TagBox[
         RowBox[{"\[LeftAssociation]", 
          RowBox[{
           RowBox[{"\<\"F0\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11w1wz3UcB/AhIhwWIXlMyS49KVLcvxNRnPKUWh7KU7nk6dDCUfIwHKI1
JpbHNc2Nsc3D2ux59mjPDzZmYzabbWJ5Orr+n8/Hfd7ns3rf7nYv/23/3/f7
efif7lPnjpnR0MXFxaOBiwt9/7+s7Zrz3Mw+Cx2PepX6g8On3+w4ZJN53Us9
60v6CR/z875q76VPf3Hy9z3m9/erPWI2V7oe8zN/76DavXnjhbMjAszfD1T7
9g7/p3T6EfN+QerNqd863+Goef9g9Yr5r3kOnBdinidUPa9d9cirfx83z3dS
7XyzNt5LT5nnDVOPmTQ1d3CDcPP8Eep3G3T+tXbNaXOeSPWOzKqXRzWJMueD
t/Z83/kVbc4Lb1jsV3dvQ4w5f6z6xzONJmSkxZr7iFMvo7drE2/uB3YettPy
cQnmvmB+edsZc3+J6hmtv7vodi7R3GeSmq+vc7K5X/jj4L4H8qakmPtOVY9q
suXxwL2p5v7T1MM+qZm1qizN1OOsuhtdV9t0Ux/4Gefptoekm3plqDv04hs2
9YPbpgfdnXMnw9QzU83X45Np6gu37NFq4tC3s0y94WbJgzYeKcoy9c9WN+YC
wtIPMF9H1xzTH/CDuMRuNyJh6Zdc9b05d0Y7S2L6B77Vni4oz/QTfCNyPFXY
9BdM1fN9L9/0G1zleuypJypg6b8CdXlYybBF62DpR/jSdP4H059wcUvHHyNS
YOnXQnVh6Df0ZfoXzp+ys0WPVkWmn+HsplxA09/n1dw+o2HpdzjF/YXd027C
0v8X1IlUbi9Y5gGOO7S64Vv9is18wFFcHljm5aJ6CjcMLPMDn8+iA8IyT/Bn
/PiwzFeJumBZ//v+L8EybzCdbvIKWOYPlvGGZR7hsUuow0vNfML85+fDMq/w
h8++ePv1aFjmF04jul4y8wyP5ALCMt9wUjeaEFjmHR6+aN2nzRtfNvMPx9P4
jodlH8BDupxYv9gPlv0ARy+gE8KyL8rU7yRccU4YLPsD5nHdDss+gQfxwMOy
X66ow2KpQWHZN/CAjnQCWPYPfJzHE5Z9VK5+gw8Iy36Cebssg2Vfwa9+vef7
Tamw7C+Yx7FLhdlncB9uSFj2G3zoK1posOw72I3GrfVVs/9g/zY0EbDsQ/h5
Go8gWPYjvP8UFaDS7EuY23ksLPsTpum+vg+WfQpz+9XBsl+r1LQ9Jw6FZd/C
3C7esOxf2CfkI2eLwrKPr6nbU3n7w7Kf4V8mU0fDsq/hJ7lBYNnf1Wra1rt6
w7LPYb6+JbDsd5g+3Jsmw7LvYT5upxqz/2HaDgtnw/J5ADelxwuvcXTgeDge
tafalbPVvL5d3YXja35+r7od54D5ff96ls8neA19OrWsdXTiBKjl/QLrWT7P
4Mf4A6LWseUnyhG1PN9RtdfPlGP1LJ+HtQ+fP0S9zZsSqpbnPaHe4UM5qZbn
D1Pv2kn5Uy3PG6He/RvltFqeP7KeVwbQgqh1jOZEqeV80eqsTAos54tRj+PE
quW8cercHAos549XT+AkqOU+zqgL8imw3E+i2p2TpJb7SlYXFVJgub8U9SRO
qlruM01dfIECy/2eVb/CSVfL/cJ/Xaekm/vOUB8NomSY+89UL+BkmnrAfTlZ
pj5w3U1KlqlXtjokmJJt6pejXsTJMfWE+3FyTX3h27couabeeeoTxyl5pv75
ag8OLP0AD+AUmP6A792lwNIv59Rhpyiw9E+heikHln6CB3KKTH/BD+5TYOm3
8+qIcAos/XdBvZwDSz/CkmLTn7Bs64umX+HPObD0LxwVSYGln+HunBLT3/DK
Hyiw9DtcWsIx/V+qHsyBZR7gfXspsMwH3IhzqZ7l/yew3NP1h/MET+PAMl9w
bAwFlnmDe3Iuq2X+4NWrKLDMI1x2maOW+SxTD+XAMq+w3wEKLPMLN+FcUcs8
wzM5sMw3nBBPgWXe4V6ccrXMP+y5lgLLPoAryjlq2Q8V6uEcWPYFfNCfAsv+
gJtxrqpln8CzOLDsFzgpkQLLvoHdOJVq2T/whvUUWPYRXFXJUct+qlKP4MCy
r+BDARRY9hfcgnNNLfsMns2BZb/BqSkUWPYd3IdTrZb9B2/aSIFlH8I11Ry1
7Mca9SgOLPsSPhxIgWV/wq04tWoJPJcDy36F089S4P/+boPX/wXaY6/H
                 
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0WdXDgAAhuH3TTLKSFaSpKRklIyKEEqFECFbNBRF5h/zD4xkhNCQsjIq
ki2S65w+XOd+vj/x5fUldSGBQCDINa4YV7nMJS5ygQbOc4566jjLGWqp4TTV
VFFJBac4STknOM4xjnKEwxziIGUcYD/7KGUveyhhN7vYSTE72M42iiikgK3k
k8cWNrOJXDaygfXksI61ZJNFJmtYzSpWksEK0kljOctYyhJSWUwKySwiiYUk
ksAC4plPHPOIZS4xzCGa2cxiJjOYThTTiGQqU5jMJCIIZyITGM84whhLKGMI
IRgcPXpE/jHMX/4wxG9+8ZMffOcbX/nCIJ8Z4BMf6aePXj7wnne8pYc3vOYV
L3lBN108p5NndNBOG6085QmPaeERD3lAM/e5x13u0MRtGrnFTW5wnf/F/FQa

                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F1\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11gd0lFUQBeCAWFBsoKgoCHZRsQCioC5iARsIoqIgKkqxEbpUlYBIE5Au
BIyEXhNKEkoSUiGFkCyplLTd9IRQlA763n9x7nGiOXsO54PN7nszd+anWR/f
bn1r+/j4jKzl42P//L+fRstfNK/Rrn97qviWdsEN2gXPcS344Y3d9+cPcWnj
/YvEs676wrwC1PsDxQt8z873PbtS/f5a8dLsKUuyp2xQnxckdje93rw2q8/f
In7X+dmmvi9EnGM/fkmY+v4d4l4RRT0jinaq84SL8048Zl6R6ny7xfY0DdpF
qfNGi0/aX8+LVuePEbfuNKFVpwmx6j5x4hF9HjSveHU/OmxsUujYpD3qvnvF
9t3zfRPU/RPFznEaJKl60OPsx4cmq/rsEztv75mi6rVfjFSlqvrRzWy53Kmq
nmniDs6B01R93WKnPCPcqt60rW6rTgdU/WmnHI3SVT/ouM6VsZ0r01V/MsTF
9voRGapfmeKr7XVnZar+0c7x+2SpftLOcVplq/7SzsdflaP6TU913p6j+n9Q
vG6t/aGRh0Nip/1jaeSDttWJ7XxY5YV2utX0iMoP3cIJDI085Yq7OF9AI195
4kHOhWnkLV/Vj0b+8lU9aeQxX9W3QOWzQNWbRl4LVP1p5LdQ9YNGngtVf2jk
u1D1y6Py7lH9o5F/j+onjXnwqv7SmA+v6jeNefGq/hep+aGRBxrzRCMfNOar
WOWFxrzRyM8/9hN72g8OeObt6TWM+aSRtxIx5pVG/mjML408loqRx9LL55ld
w8gnjXzSyCeNfJaJkU8a+aSRTxr5pJHPcjHySSOfNPJJI5808lkhRj5p5JNG
Pmnkk0Y+K8XIJ4180sgnjXzSyGeVGPmkkc8qV/gnvZ94fOECMfrpX8PIL438
0sjvUTHySyO/NPJJI5808lntmnhTh2uaTQwQ4/zLxGuPdR/Z/LkVNYw8V1++
3ypxamr/0pZ/rBHj+9bXMPJf7fozaHSP59dvFOM8QeIZe1/9/N7NwWKcb7PY
fNhdD92wVYzzbRNvWf1B+qNfhohx3lBx/O2fTX8yPqyGMY805vHY5fttF+dM
/vrlp+/ZKcb9dokrzwy/0Pa7cDHuGyH+a8D3W10HI8W4/27xFPvxd0aJUQ96
9n2vmVe0GPWh/Q+/dfSBb2PEqFeseMXcbq8/vIJG/eLEm958f+UjB2jUM14c
VqdX7Ra19ohRXzpql/2LvWLUk04a1nfHUx8lqPrS5ssatp6WqOqdJM71DhzS
ZnuSqn+yuMR/aMqzJcmqH/vEx+11b01R/aHP1Rs36YWX9qt+0X6F9gtTVf9o
88u//b4/VfUzTTxt0Sv7lvVLU/2lZ53qeD7wYprqt1s8z7Zvrlv1n/51o9NA
lQd66bVdflwVTSMf6eLAfl1ty1Ve6NXR7xSsOUYjPxni9U3eu3HdTzTyRAfb
cjfJVPmiQzI//GrDNhp5yxKb8Jgr0sgfHTnj4z2bPDTymC2OLf/UtJxGPukE
246bc1ReadM8UyAa+aXdl5zAqDzTWc71aOT7kPhQyDf2pfJO59cfVDeszmGV
f7rIvn0xjXmgyxPthY6o+aBNWObsTKAxL7nik36jTElpzA99JndMdfhpGvOU
JzZf1jhyBo35osfbONfPV/NGT7Bf35vG/NEm3CagNOaRnpwRYxJAYz4LxFOv
iBtf2J7GvNImLCYxNOaXnunEj8Y807/8bH+hUM03bYvvHUhj3un5ZbaBNOaf
Xnhb8nXFV3rUPqAX2+t0pbEf6CU2Lv409gVtl1v/Uhr7wyteZv+5JY19Qi+/
mGYmhMZ+oc2ymFeWSGPf0GvsumhYpPYPbXaPaTCNfUSb4TMTSGM/0UGerOMV
Z2jsq2Kx2Q1mYmnsL9qE+e6qmTT2GR3qjDeN/VYiNrNrGkJj39G7bDyG0Nh/
dMRpO4A09iFtp2tQ3VK1H+kYW+7uNPYlbadjcACN/Unb9B+voLFPy8SJ9vht
aOxX2qb3pB+NfUvbdA5NobF/6TTLO8rVPqZtuob1pbGf6Uy7HoJo7Gs626Rj
+AUa+7tCbLt/qiONfU4fseM2h8Z+p/Oc9Ulj31eKbXdGNqex/2mvje9wGs8D
2lZ3VBSN5wNtq3euXpV6XtAVNg49aDw/aHv784E0nie0vd2YahrPl6PiE7a8
bWk8b2h7unGTaDx/6NPOf59oPI/os/a4javV84m2v31pAI3nFX3Jrq+tNJ5f
9H//qX/4738Dx2GhnA==
                 "], {{{}, {}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl0VV0EAQABdCNrtE1enR31+jO0Q2ja6ND6Q4lDVBaCSWUDqUbBaW7u1uQ
vufwcd877/uFhEeGRUQJCAgIpL8YyCAGBH7e/ehLH3rTi0gi6EkPutONrnSh
M53oSAfaE0472tKG1rSiJS1oTjOa0oTGNKIhDQijPvWoSx1qU4ua1KA61ahK
FSpTiYpUoDzlCKUsZShNKUpSguIUoyhFKEwhClKA/OQjL3nITS5ykoPsZCMr
WchMJjISQgbSk460pCE1qQgmJSlITjKSkoTEJCIhCYhPEPGISxxiE4uYxCA6
0YhKFAIDPx/9UX3gPe94yxv+5zWv+I+XvOA5z3jKEx7ziIc84D73uMsdbnOL
m9zgOte4yhUuc4mLXOA85zjLGU5zipOc4DjHOMq//MMRDvM3f3GIgxxgP/vY
yx52s4ud7GA729jKn/zBFjaziY1sYD3rWMsaVvM7v7GKlaxgOb/yC8tYyhIW
8zM/sYiFLGA+85jLHH7kB2Yzi+/5jm/5hpnMYDrTmMoUvuYrJjOJiUxgPOMY
yxhGM4qRjGA4wxjKEL7kCwYziIEMoD/96EsfetOLSCLoSQ+6042udKEznehI
B9oTTjva0obWtKIlLWhOM5rShMY0oiENCKM+9ahLHWpTi5rUoDrVqEoVKlOJ
ilSgPOUIpSxlKE0pSlKC4hSjKEUoTCEKUoD85CMvechNLnKSg+xkIytZyEwm
MhJCBtKTjrSkITWpCCYlKUhOMpKShMQkIiEJiE8Q8YhLHGITi5jEIDrR+ARA
Q557
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F2\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx11nmUT2Ucx/EhpBBKiBCimghFCdGGFLKGSKUQsmatJoqkJIRJdhGyM9bB
2Pd9GdmXse8qJYq6z/fTed7nPNX9Z87rcO7v3vt8l0/+Jm1rNU0dExPTNVVM
jPsbXk83SdXlesFmFULXtSu5gtzZe+Ztz+z9Y1iP4N97e29LXJ7t2tS+wf8f
4P17qfwPfvD6oP/xiX/uF+/d56ujq7udHuqt+w/3znlq7Ftd24/y1u+N+Zf1
dpcr7Mo3q0fZG2O99fvjvO+tOnBr4vLx3nqeCd5vd22ft0zvid56vkneU8fX
bL3wxcneet4p3le2lVhcOvM0bz3/dO9yN7JmWLBzhreef6b3iuhuuavOCt4H
n4xtUafh9NnB+yV43+5ul2VO8L74kXpVxu3rMDd4/3netaK3y5U8L/ge8707
93zo5wZPLAi+Dx72rbsWBt8r0TtphnvhxOD7LfJOie6Ws/Hi4Hsu8U534Ez/
+suWBN83yTs2erqhBZYG3xs/kKbppVbPLgu+P34yc56VfX9ZFpzHcu+XciXH
Txm/PDgf/Fqhfi031l0RnBduW7xi+XPpVgbnhz8u6x54ZXCeq7wHVZp7IrbF
quB88ffuc+daHZw3nt/IPeDq4PzXeK9vfvCNLz7Eqge8v8OQkpOLrg3qA1+I
q5Z+wyGselnn/VeftNEJYtUPzjp4SVQh64N6wgVHd4ruiFVfG7xLTS4avTFW
veHK7vPV2RjUH26wbOTNPmk3BfWIW22su2PSPKz63OwdtzvThHXNseoV93ev
m3NLUL947Hn3AbHqeat3wlVXMFj1je04s28L6h2fS1f7eEIbrPrHHTMW2/Lc
Wqx+wPZz+bYH/YF753AvhNUvWLfD6h88tIA74B1BP2HXLXd9gtVf2I5/H1a/
7fR+zC6s/sPRYUZPiNWP2N2t9nGs/tzlHX28yynlsPoVWzsOwepffKR691Wp
L2L1c7K3e9uvK2H1N7ZyGY3V79h9vdlXsfp/t7eVSw2seYDtNCZhzQecvd3E
qAZ/DOYFtvZtgDU/sB3vbKx5gl21ZM2wJ5gvuIwVINa8wa76SizGmj/YjiPb
3mAeYVfNNVtjzSfceMRn0R2x5hW2ds+7L5hf2D5fF6x5hl23DdyKNd9wdLhR
Re8P5h123TurB9b8w3pdrHl4wNvatwTWfMTR8IsKBmte4mLWIFjz86C3PV5Z
rHmKrd0GY81XHNVKrzHnsebtIW83/YpXxJq/2G43EmseY2uP37Dm82Hvi1cq
FzlSHWteYzed203Emt9Yf48E8xxHw8H9QjDf8eeu3OtjzXts3dQLa/7jO61A
sPYB1nFg7Qc8PIuroKPBvsA2fkph7Q98vw0QrH2Co2JzHRbsFzzNtUci1r7B
btrkOIW1f/DjtmBSgn2E7fgqYO0nvLSwOxCsfYVtXA3F2l/4hSJuA2C1P86o
Bgr22zHv7a6d8mDtO+ymcb0qWPsPv+rWRyesfYjt843F2o/4WDlXMVj7Ett4
u461P497vxt1V1JhrH2Ki+uGwX7Fv7r26461b7HbVvFTsPYv/sgaBGsfY3u8
NCeC/YxvtQGDta+xjcNGWPsbD6jvBi7WPsd2u7lY+x3fY+2Bte+xbfNMJ721
//F3bj2VwcoDuJldWPkAP2wvjJUXsI3PJKz8gOe0cSeMlSdOeXdVA3srX+Cn
bGBh5Q1s47QdVv7Aa9w6G4GVR7D7ehPWYeUT/LIrlytYeeW0t42//Fj5Be+J
tldcNaw8gy1edMPKN/hNe0CsvIMVp7HyDz7r1t9NrDx0xtuqLxYrH+H3bMBg
5SVs46UnVn7Cfw5zCwQrT2HFEax8hT91ny/9WW/lLWzjoCRW/sJ3WIDBymPY
dW+hflj5DH/jXnchVl7Dal+s/Ibvs4I55608hy2+lMfKd/gH93gtsfIetnaL
x8p/+FEb+Fh5ELvp1/QSVj48773I3S43Vl7E1h6VsfIjft6N+45YeRKnV8Dz
Vr7Emze5C2tdYivna1j584L3K3bAWHkUW9yoiZVP8WH3dHFYeRVb+U3Gyq/4
HRvQWK+Li2gheSvf4p9S3ALGyrvYyqUhVv7F71vAwsrD2LZvAlY+xrdYPMXK
y9iON+Mlb+Vn/KUbV6Wx8jSuoQL0Vr7Gd1vDYeVtbMexBCt/41E2XvB//w0v
/v1vDU/AVg==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV0EAQYBeCN7u7cRnd3jBGja3TD6NroklDSAFu6u7s7DMIApbtTKSWU
kG+Hh+/c8z/fc//gyOiIqFgBAQGBDAt8nzF3bOIQl3jEJwEJSURikpCUZCQn
BSlJRWrSkJZ0pCcDGclEZrKQlWxkJ4hgQshBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmVCqEEZVqlGdGoRTk1rUpg51qUd9GtCQRjQm
giY0pRnNaUFLWtGaNrSlHe3pQEc6EUlnutCVbnSnBz3pRW/60JcooulHfwYw
kEEMZghDY/plOCP4gJGMYjRj+JCPGMs4xjOBiUziYz7hUz5jMlP4nC/4kq/4
mm/4lu+YyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxzie37gR37iMEc4yjF+5hd+5TeOc4Lf
+YOTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84A/+YuHPOIxT3jK
3/zDM57zgpf8y3+84jVveMv/xIw/kFjEJg5xiUd8EpCQRCQmCUlJRnJSkJJU
pCYNaUlHejKQkUxkJgtZyUZ2gggmhBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVCaUKYVSlGtWpQTg1qUVt6lCXetSnAQ1pRGMiaEJT
mtGcFrSkFa1pQ1va0Z4OdKQTkXSmC13pRnd60JNe9KYPfYkimn70ZwADGcRg
hgS+/+1DeQc5DJ6E
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F3\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJxt13mYzlUYxvExEaKIrClEWmRNRcpEkbRpKoUIhVJRWSJEEhVJMdbJGlmz
jmXs69j3Lfs+9qUFUep3ntt1vpczzT9zfeb1/pZznvM8t8KNWsQ3jo2JiWmb
LibG/Q5/en/88sbHhjeJu95t0rhannqtNladGXe9U7wjuL8En2/3NubZE3cq
4Wri6Uud01jfP+BtH9c7fO373bzLvTgmQ89neqax7pfqXSr52IgeJU9cu15v
70rp73sk19o+aaznOX3tfv28D+7v+N7brQd66/qJ3t3mbRo67Y6h3rrfMO9c
a3M2S/fWCG/db6R304ruL6OC+4/2nj32nSE1s4wJnmesd5a8fcq33TcueL4J
3vXsAScGzzvJ+/XLLWccenJy8Pz48zJff3Fx4pTgfaZ6j3OPl3da8H54c3S3
gl2mB++b5P33thUnyp5KCt5/hvfdt+ydWa3WzGA9ZqWxqvVc3AtVf+9aZyHW
es32/qRDpvjm9yd7a/3wMPe4fed4az3neq+MnjbhKtb6zvP+rXD16JHme2u9
F3jfXtt9A2v9F3rf5b4+BGs/cPSPoyVa5K39wc92WtemQ6bF3tovvC+/ewCs
/Vvi3cpugLWf2K3eoHuWemt/8Y+nL2X/aTfWfi/zLuse93us/cfLi7oNX+6t
esB1Fw5YuugKVn2keJ+tW2T86slY9bHCu2t0962NseoFWznkXxnUD55Yckn9
4+ux6mmVd+VVz0dXxKovvK3xjuL/VFgd1BuONitHxrNY9bfG+99Et8BY9Yjt
8WuvDeoT37slNlridUG94rktvp1QcglW/a73fsleCKuecUu3Xbk3BPWNHx+e
u3Sxj7DqHWe0DcSqf+yuXrrYxuA84MRvjmZO6ox1PnATt/y7sM7LJu/o4c7N
fwjr/GB7nd5Y5wkvW3Qlqmis87XZ+7tsrkKwzhu2qw3FOn/YVfdrl7HO4xbv
M+74vYJ1PvGsarX6N5yEdV5xl76DoxXcGpxf/JwdCKzzjPPYAmKdb3zAHad8
24Lzju31WmKdf9w634UandZh9QP8hD3w9qA/4JuSOkcVgdUvsB2PvVj9Y4e3
280+5bH6CX7X/gFWf8EPWkFj9ZtfvaPiPF+4Olb/wSndCx0ZPQKrH+EftroG
g9Wfdnq/YQWE1a+wlf9UrP6F3afJWXcF/QzPydp+VFxTrP6Gv6zjNgyr32Fr
dwV2B/0P2/a3weqH+LC1A6z+iH9xu1V8T9AvcVs70Fj9E1cp0SA6Alj9dK/3
ze71K2L1V7zdHYcErH6LrT2ew+q/+7zd6blQA6sf44ej3Wk/Cqs/Y/3eH/Rr
HBVXuyolsPo3tnKpg9XP8aQ/Ut9P6Y7V33GCay9JWP0ef6oFDvo/fjMq9l7Z
DgTzAD9lDQNrPmDXTXM2w5oX2NpFf6z5gd1pHrAUa55g43ms+XLQe77bzoJY
8waPbGcLEMwf/JU7/u2w5hH+wBoE1nzCGhdY8wrb8qQ7FMwvXMAKFmueYTvO
dbHmG07N7Bow1rzDa1z7n4E1//AU+xhrHuJ+rlyyHw7mI7bjWQlrXuIGNuCw
5ie2dj4Aa55it7qxy7HmK85uDRdr3h7x/tMdn0JY8xfv7OUWHGse4wWuPbfH
ms84etmopWLNa6xxjjW/sZVP7NFgnmNrJ6Wx5juuYA0Wa97jOwvainhr/uMb
7IJYeQAfs+XDygfYjlOOVG/lBWztMw4rP+Bos6MOh5UnsI3bQVj5AjeyBok1
PvDTtewO3sofx7wfsICAlUfwrbbBWPkE2/jsgJVXsEsfs8di5ResuIWVZ7Ad
r/THvZVvcA/Xbstg5R38oRuH9bHyD37VAgFWHsKP2gtg5SOs8sLKS9jaTc4T
3spP2MZPZaw8hV23j2+Ola/wdBeHBmPlLTxwqTVkb413/JkFAKw8dtLb2m8R
rHyGbRzXxMpr2KZvR6z8hu3y47HyHL5kcRgr3+E9rv1kOOWtvIcXX7GG4638
h3928aQBVh7E0cWiCYWVD7EtdzJWXsQ6flj5EVs7znXaW3kSF7YAhZUv8Y32
gFh5E58sawfKW/kTb3DltworLmFrRxex8ukZbxtPRbHyKra4Eo+VX7HFz05Y
eRbXsICAlW9xKfvvClbexbepYLyVf/FfblyXw8rD2OJbQ6x8jO32vbDyMrZy
nIuVn7HaE/7/3+EPn/8HmN7+UA==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwl1FV0EAQYBeCN7u7cRnd3jBGja3TD6NroklDSAFu6u7s7DMIApbtTKSWU
kG+Hh+/c8z/fc//gyOiIqFgBAQGBDAt8nzF3bOIQl3jEJwEJSURikpCUZCQn
BSlJRWrSkJZ0pCcDGclEZrKQlWxkJ4hgQshBTnKRmzzkJR/5KUBBClGYIhSl
GMUpQUlKUZoylKUc5alARSpRmVCqEEZVqlGdGoRTk1rUpg51qUd9GtCQRjQm
giY0pRnNaUFLWtGaNrSlHe3pQEc6EUlnutCVbnSnBz3pRW/60JcooulHfwYw
kEEMZghDY/plOCP4gJGMYjRj+JCPGMs4xjOBiUziYz7hUz5jMlP4nC/4kq/4
mm/4lu+YyjSmM4OZzGI2c5jLPOazgIUsYjFLWMoylrOClaxiNWtYyzrWs4GN
bGIzW9jKNrazg53sYjd72Ms+9nOAgxzie37gR37iMEc4yjF+5hd+5TeOc4Lf
+YOTnOI0ZzjLOc5zgYtc4jJXuMo1rnODm9ziNne4yz3u84A/+YuHPOIxT3jK
3/zDM57zgpf8y3+84jVveMv/xIw/kFjEJg5xiUd8EpCQRCQmCUlJRnJSkJJU
pCYNaUlHejKQkUxkJgtZyUZ2gggmhBzkJBe5yUNe8pGfAhSkEIUpQlGKUZwS
lKQUpSlDWcpRngpUpBKVCaUKYVSlGtWpQTg1qUVt6lCXetSnAQ1pRGMiaEJT
mtGcFrSkFa1pQ1va0Z4OdKQTkXSmC13pRnd60JNe9KYPfYkimn70ZwADGcRg
hgS+/+1DeQc5DJ6E
                    "]]}]}, {}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwl1GV7EAQUBeCNbjZ69Oju7h6MHt0wesRoUenuUDqUDiUN0qBRulFCaRQU
EFCQfvfw4T3nB9znntDI6Ii+gQEBAUNETMciNnGISzzik4CEJCIxSUhKMpIT
RDApSEkqUpOGtKQjhPRkICOZyEwWshJKNrKTg5zkIjd5yEs+8lOAghSiMEUo
SjGKU4KSlKI0ZShLOcpTgYpUojJVqEo1qlODmtQijNrUIZy61KM+DWhIIxoT
QROa0ozmtKAlrWhNG9rSjvZ0oCOdiKQzXehKN7rTg55E0Yve9KEv0fSjPwMY
yCAGx9yVDxjKh3zExwxjOCMYyShGM4axjGM8E5jIJCYzhalMYzozmMksZvMJ
nzKHucxjPgtYyCIWs4SlfMbnLGM5K1jJKlazhrWsYz1f8CUb2MgmNrOFrXzF
13zDt2xjOzvYyS528x3f8wM/soe97GM/BzjIIQ7zEz9zhKMc4zgnOMkpTnOG
s5zjPBe4yC/8yiUuc4Wr/MbvXOM6N7jJLW5zh7v8wZ/c4z5/8TcPeMgj/uEx
T3jKv/zHM57zPy94ySte84a3xDx/ILGITRziEo/4JCAhiUhMEpKSjOQEEUwK
UpKK1KQhLekIIT0ZyEgmMpOFrISSjezkICe5yE0e8pKP/BSgIIUoTBGKUozi
lKAkpShNGcpSjvJUoCKVqEwVqlKN6tSgJrUIozZ1CKcu9ahPAxrSiMZE0ISm
NKM5LWhJK1rThra0oz0d6EgnIulMF7rSje70oCdR9KI3fYgZ72j60Z8BDGQQ
gwPf7/o7KDedjw==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    LineBox[{375, 376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}], ",", 
           RowBox[{"\<\"F4\"\>", "\[Rule]", 
            TemplateBox[{GraphicsBox[{{}, 
                GraphicsComplexBox[CompressedData["
1:eJx113mUj1Ucx/EhIaSYqJC1QhLZGsQksiW0ICnZJSTZ10iKlIYQyb7GRGLI
NsYY+75kX8a+M2XP1r33c859n+45+ed3Xmd+y/M897t85GvW4a2WqSMiInqm
ioiwr//9lxx9p2jhUi2ut4z+r7t49zmWu+DG7v2Cvw/07tWjZKW7nYYE74/x
fjn91F9/fOmH4PMjvZe+PWdJ8bjRwfeN9S434Y+160uMD75/ovcHXZp+/OLe
ScHvTfHONfZUyt1RU4Pfn+Z9MKFttw31ZgTXM9PbffyxWcH1zfZulKnrl813
xgbXO8c7R4nbGYoPnxtc/2/eF4skVO9baF5wP3hzfOpvT3z9e3B/871j33xt
a83T84P7XeBtPpx1XtW44P5xO3P3j09fGDyPRd6vZ3h4TJ8H/wieDy4yrs7B
4y0WB89riXfG4sPz1ExaEjy/pd7nE3c1+63AsuB5Ynt12QcsD55vvPesMw3P
9j4WHzzvFd6rK9Qe9VfehOD549JfX140dVtCcB4rvadti9nXoN/K4HxwNveD
icF5YXMzueKPJAbnt8r7amznih2/XxWcJ25xPVuTp6OTgvPFu6IX9d9zKSk4
79XeVQa/O+Wb8auD88cLdtxKqlB7TVAP+Gn3g1j1sdZ7REt7R1j1ss77gbmH
Cjf4AKt+cKebfc1H1gf1hI9Xytt++TKs+trg/faQlUM/bYdVb3iVLa9cG4P6
wyVzp9mxeyNWPW7yntJ62pXBvbDqE0fOq5qtQpHNQb3iL/45XSZlP1b9bvH+
u7I9IKx6xs2+e65n/XJbg/rG5uLHPnQOq963eeeLWdj4cC2s+sf7SrkGCPoB
DzPVP+wOVn9s967Rt1CWtu9g9QtOVeDWpCqxWP2DF5unYY4g6Cfcsd1Pq240
wuov7H59Pla/4eS48idnZdwZ9B8e/Z470KAfcd37B9M2XorVn9h9XeSuoF+x
fVpZ2mL1L+5+sfbic4lY/YxdOef4M+hvfMZU17jPsPodTzxgGxar//G75nTr
5t8dzAP86DO2ArHmA17njg9rXuB+n9gJsCeYHzgq0t1xME9wiqnGmH1Y82Wv
94z3XUEF8wZ/mKqqaTGs+YNttz51FGse7fM2hx15IwprPmHXLjFY8wpHjxhU
etYZrPm13/tGVMM1A17BmmfY3c5orPmGW2vABPPugHce0+2PVseaf3iPHR8T
sOYh/v5T24BY8/GgdzUz/cwjCeYlvr/44WVdZ2DNT7zITCfTY8E8PeTtyqcB
1nzFz8783L4lmLfYfXvaw8H8xWZY2gkZzGNc270Baz7jtOUT57XJfCSY1zj+
yPBXK7fCmt+4qwZWMM/xj4/ZTyQH8x1faWXvGGve4zp2ujTDmv94dkZbcVj7
AKdrbDsGaz/g5qbaxp7C2hd4hR3XWY8G+wPnrGcnLtY+wd1cg2PtF7zTjqtR
WPsGF6tV1BwR1v7BQ8aP3FLwEtY+OuZ92rZrDqz9hCtXbmVGDNa+whPs13fE
2l/4ti3XcVj7DNd3BYtVLvj3b9P1X3ANa98d9858pEONSfmw9h82DyPL0Dew
9iG2w6lnD6z9iPPvnjm59TSsfYkVD7D2JzZfbgYS1j494V1m89HbRQtj7Vfs
1mM9rH2LL3W0Twhr/2L76auxWPsYaz1g7Wecus35k5vTnAz2NXbtUxxrf+Ml
djy+j7XPcXZztyMGYe13/JkrAKx9j7ekuba1fTLW/sfPme3yXqZT3soD+Ktf
VjepFoWVD/Cx2/YLsfICrugGKFZ+wD9NvGc2BFaewNf/tgMOK1/gt2w5RZ72
Vt7Ac1w6w8ofOINZfgltsfIIbuUaBiuf4MShdkFi5RWc++heM1Gx8ssZb7eO
c2LlGfznQHsAWPkGu/bthJV3sFtHE7DyDzbLzCwErDyE3eO9gZWPznpPyjd/
bkQBrLyEzc2ZlsLKT9iln55YeQrHPXEh/drpWPkKK/5j5S1s3jxm4j2s/HXO
e/0jtmCx8hh25VwfK59hM3xNhWLlNXworZ0AWPkNl3UPACvP4ZGzXzAb7Ly3
8h3+y66nElh5D7/hBjJW/sO/TLaBDSsP4gft+IjDyoe4abUoM6Kx8iJePsY2
+AVv5Uf8pD3eslh5Encx2+aHllj5Em+3cWAYVt7ERV3BYOVPPLi0TXRYeRSf
tOM620Vv5VNcyS0wrLyKf37eXgBWfsWuncZg5Vlsq/tWEla+xS5+pWDl3Uve
7nZzYeVf/NG6CyaRYeVh7NZjZ6x8jPO6BsPKy7j3imcGfrUJKz9jN75uYuXp
y96l3MLHytfYxd26WHkbu/LqjZW/cfVGxTo8OxMrj2P99x4rn2O9pgSv4b/w
78n/+/ovxGGj7w==
                 "], {{{}, {}, {}, {}, {}, {}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJwt0GdXDgAABeC3kFVRMsoshCRlRJSMFpnZK2RLRcrBb7MyywzZq2ggVMgK
ec6pD8+59369sUVlBaXBgUAgiPOcVs7Kc737Ahep4hKXucJVrnGdamq4wU1u
cZs73KWWe9znAXU85BGPecJTnvGcF7zkFa+pp4E3vKWRJppp4R3v+UArH/nE
Z9pop4MvfOUbnXznBz/5xW+6+MNf/tEd6DkniGD60Jd+hNCfAQxkEIMJJYxw
hjCUCCIZRhTDGcFIRhFNDKMZw1jGMZ4JxBLHRCYxmXimMJVpJDCdRGaQxEyS
SWEWs5nDXFKZx3zSWMBC0slgEZksZglLWUYW2eSQSx7LWUE+K1nFatawlnUU
sJ4NbGQTm9nCVraxnR3spJBd7GYPRexlH/s5wEEOcZgjFHOUEkop4xjHKecE
FVRyklOc4T+rH1qc
                    "]]}]}, {
                    EdgeForm[], 
                    Directive[
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    Opacity[0.2]], 
                    GraphicsGroupBox[{
                    PolygonBox[CompressedData["
1:eJw10mdXDgAABeA3CskoQtkNI2RlZFVGySayZzKKelHoTVZWmRlFJYSQsjPi
HL+txwcfnnPu/XrPTSgI5pX2CgQCYfzlrFBJiD/6b7r5xU9+8J0uvvGVL3zm
Ex/5QCcdvKedd7zlDW285hUvaeUFz3lGC09ppolGnvCYBup5xEMecJ867nGX
O9zmFjeppYYbXOcaV7lCNZe5xEUucJ4qzlFJiIp/23CG05RTxilOcoIgpZRw
nGMUU8RRjnCYQxRykAIOsJ997GUPu9nFTnawnW1sJZ8tbCaPTWxkA+tZx1rW
sJpV5LKSHLJZwXKWsZQsMslgCYtZxEIWkM585jGXOaQxm1nMZAbTSWUaU5lC
CpOZxEQmkEwSiSQwnnGMZQyjGcVI4oljBMMZRixDGUIM0QxmEAMZQBT9iaQf
felDBOH05v/3ewC+zUiL
                    "]]}]}, {}, {}}, {{}, {}, {}, {
                    Hue[0.67, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], 
                    LineBox[CompressedData["
1:eJwV1FWYFgQQBdClu7t36e5ulm5YumHpXLpbCSWU7m4MukNpFJTuNEilGwQ8
/8OZ+z4z3w0JjwjrFSkoKGiQEcjIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJLyLoTR/60o/+DGBg
4LYMZghDGcZwRjCSUYxmDGP5gi8Zx3gmMJGv+JpJTGYKU/mGb5nGdGYwk1nM
Zg5zmcd8FrCQRSxmCUtZxnJWsJJVrGYNa1nHer7je37gRzawkU1sZgtb2cZ2
drCTXexmT2AXnn2v3Md+fuJnDnCQQxzmCEc5xnF+4VdOcJLf+J1TnOYMZznH
eS5wkUtc5gpXucZ1bnCTW9zmD/7kL/7mDne5x30e8JB/+JdHPOYJT3nGc17w
kle85g1vecd7PvAfH/nEZwIFEInIRCEq0YhODGISi9jEIS7xiE8CEpKIxCQh
KclITgpSkorUpCEt6UhPBoIJISOZyEwWspKN7OQgJ7nITR7yko/8FKAghShM
EYpSjOKUoCSlKE0ZylKO8lQglIpUojJVqEo1qlODmtSiNnWoSz3qE0YDGtKI
xjShKc1oTgta0orWtKEt7QinPR3oSCc604WudKM7PehJoMAj6E0f+tKP/gxg
IP8Dr+ieCg==
                    "]]}, {
                    Hue[0.9060679774997897, 0.6, 0.6], 
                    Directive[
                    PointSize[0.007333333333333334], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], 
                    
                    LineBox[{375, 378, 
                    376}]}}}], {}, {}, {{}, {}}, {{}, {}}}, {
               DisplayFunction -> Identity, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, AxesOrigin -> {0, 0}, 
                PlotRange -> {{0., 1.}, {0., 1.}}, PlotRangeClipping -> True, 
                ImagePadding -> All, DisplayFunction -> Identity, AspectRatio -> 
                1, Axes -> {True, True}, AxesLabel -> {None, None}, 
                AxesOrigin -> {0, 0}, DisplayFunction :> Identity, 
                Frame -> {{True, True}, {True, True}}, FrameLabel -> {{
                   FormBox["\"Recall\"", TraditionalForm], None}, {
                   FormBox["\"FalsePositiveRate\"", TraditionalForm], None}}, 
                FrameTicks -> {{Automatic, Automatic}, {
                  Automatic, Automatic}}, GridLines -> {Automatic, Automatic},
                 GridLinesStyle -> Directive[
                  GrayLevel[0.5, 0.5], 
                  AbsoluteThickness[1], 
                  AbsoluteDashing[{1, 2}]], 
                Method -> {"CoordinatesToolOptions" -> {"DisplayFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& ), "CopiedValueFunction" -> ({
                    (Identity[#]& )[
                    Part[#, 1]], 
                    (Identity[#]& )[
                    Part[#, 2]]}& )}}, PlotRange -> {{0., 1.}, {0., 1.}}, 
                PlotRangeClipping -> True, 
                PlotRangePadding -> {{0, 0}, {0, 0}}, 
                Ticks -> {Automatic, Automatic}}],FormBox[
               FormBox[
                
                TemplateBox[{"\"ROC curve\"", "\"No-discrimination line\""}, 
                 "PointLegend", DisplayFunction -> (FormBox[
                   StyleBox[
                    StyleBox[
                    PaneBox[
                    TagBox[
                    GridBox[{{
                    TagBox[
                    GridBox[{{
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    AbsoluteThickness[1.6]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #}, {
                    GraphicsBox[{{
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {
                    LineBox[{{0, 10}, {20, 10}}]}}, {
                    Directive[
                    EdgeForm[
                    Directive[
                    Opacity[0.3], 
                    GrayLevel[0]]], 
                    PointSize[0.132], 
                    AbsoluteThickness[1.6], 
                    GrayLevel[0.5]], {}}}, AspectRatio -> Full, 
                    ImageSize -> {20, 10}, PlotRangePadding -> None, 
                    ImagePadding -> Automatic, 
                    BaselinePosition -> (Scaled[0.1] -> Baseline)], #2}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {Center, Left}, "Rows" -> {{Baseline}}}, 
                    AutoDelete -> False, 
                    GridBoxDividers -> {
                    "Columns" -> {{False}}, "Rows" -> {{False}}}, 
                    GridBoxItemSize -> {
                    "Columns" -> {{All}}, "Rows" -> {{All}}}, 
                    GridBoxSpacings -> {
                    "Columns" -> {{0.5}}, "Rows" -> {{0.8}}}], "Grid"]}}, 
                    GridBoxAlignment -> {
                    "Columns" -> {{Left}}, "Rows" -> {{Top}}}, AutoDelete -> 
                    False, GridBoxItemSize -> {
                    "Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}}, 
                    GridBoxSpacings -> {"Columns" -> {{1}}, "Rows" -> {{0}}}],
                     "Grid"], Alignment -> Left, AppearanceElements -> None, 
                    ImageMargins -> {{5, 5}, {5, 5}}, ImageSizeAction -> 
                    "ResizeToFit"], LineIndent -> 0, StripOnInput -> False], {
                    FontFamily -> "Arial"}, Background -> Automatic, 
                    StripOnInput -> False], TraditionalForm]& ), 
                 InterpretationFunction :> (RowBox[{"PointLegend", "[", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    RGBColor[0.368417, 0.506779, 0.709798], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> 
                    RGBColor[0.24561133333333335`, 0.3378526666666667, 
                    0.4731986666666667], FrameTicks -> None, PlotRangePadding -> 
                    None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], 
                    "RGBColor[0.368417, 0.506779, 0.709798]"], Appearance -> 
                    None, BaseStyle -> {}, BaselinePosition -> Baseline, 
                    DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    RGBColor[0.368417, 0.506779, 0.709798]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["RGBColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    RGBColor[0.368417, 0.506779, 0.709798], Editable -> False,
                     Selectable -> False], ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}]}], "]"}], 
                    ",", 
                    RowBox[{"Directive", "[", 
                    RowBox[{
                    RowBox[{"PointSize", "[", "0.007333333333333334`", "]"}], 
                    ",", 
                    RowBox[{"AbsoluteThickness", "[", "1.6`", "]"}], ",", 
                    InterpretationBox[
                    ButtonBox[
                    TooltipBox[
                    GraphicsBox[{{
                    GrayLevel[0], 
                    RectangleBox[{0, 0}]}, {
                    GrayLevel[0], 
                    RectangleBox[{1, -1}]}, {
                    GrayLevel[0.5], 
                    RectangleBox[{0, -1}, {2, 1}]}}, AspectRatio -> 1, Frame -> 
                    True, FrameStyle -> GrayLevel[0.33333333333333337`], 
                    FrameTicks -> None, PlotRangePadding -> None, ImageSize -> 
                    Dynamic[{Automatic, 1.35 CurrentValue["FontCapHeight"]/
                    AbsoluteCurrentValue[Magnification]}]], "GrayLevel[0.5]"],
                     Appearance -> None, BaseStyle -> {}, BaselinePosition -> 
                    Baseline, DefaultBaseStyle -> {}, ButtonFunction :> 
                    With[{Typeset`box$ = EvaluationBox[]}, 
                    If[
                    Not[
                    AbsoluteCurrentValue["Deployed"]], 
                    SelectionMove[Typeset`box$, All, Expression]; 
                    FrontEnd`Private`$ColorSelectorInitialAlpha = 1; 
                    FrontEnd`Private`$ColorSelectorInitialColor = 
                    GrayLevel[0.5]; 
                    FrontEnd`Private`$ColorSelectorUseMakeBoxes = True; 
                    MathLink`CallFrontEnd[
                    FrontEnd`AttachCell[Typeset`box$, 
                    FrontEndResource["GrayLevelColorValueSelector"], {
                    0, {Left, Bottom}}, {Left, Top}, 
                    "ClosingActions" -> {
                    "SelectionDeparture", "ParentChanged", 
                    "EvaluatorQuit"}]]]], BaseStyle -> Inherited, Evaluator -> 
                    Automatic, Method -> "Preemptive"], 
                    GrayLevel[0.5], Editable -> False, Selectable -> False]}],
                     "]"}]}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{#, ",", #2}], "}"}], ",", 
                    RowBox[{"LegendMarkers", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}], ",", 
                    RowBox[{"{", 
                    RowBox[{"False", ",", "Automatic"}], "}"}]}], "}"}]}], 
                    ",", 
                    RowBox[{"Joined", "\[Rule]", 
                    RowBox[{"{", 
                    RowBox[{"True", ",", "True"}], "}"}]}], ",", 
                    RowBox[{"LabelStyle", "\[Rule]", 
                    RowBox[{"{", "}"}]}], ",", 
                    RowBox[{"LegendLayout", "\[Rule]", "\"Column\""}]}], 
                    "]"}]& ), Editable -> True], TraditionalForm], 
               TraditionalForm]},
             "Legended",
             DisplayFunction->(GridBox[{{
                 TagBox[
                  ItemBox[
                   PaneBox[
                    TagBox[#, "SkipImageSizeLevel"], 
                    Alignment -> {Center, Baseline}, BaselinePosition -> 
                    Baseline], DefaultBaseStyle -> "Labeled"], 
                  "SkipImageSizeLevel"], 
                 ItemBox[#2, DefaultBaseStyle -> "LabeledLabel"]}}, 
               GridBoxAlignment -> {
                "Columns" -> {{Center}}, "Rows" -> {{Center}}}, AutoDelete -> 
               False, GridBoxItemSize -> Automatic, 
               BaselinePosition -> {1, 1}]& ),
             Editable->True,
             InterpretationFunction->(RowBox[{"Legended", "[", 
                RowBox[{#, ",", 
                  RowBox[{"Placed", "[", 
                    RowBox[{#2, ",", "After"}], "]"}]}], "]"}]& )]}]}], 
          "\[RightAssociation]"}],
         Short[#, 5]& ],
        BaseStyle->{Deployed -> False},
        StripOnInput->False]},
      {GridBox[{
         {
          TagBox[
           TooltipBox[
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource[
                "FEStrings", "sizeBriefExplanation"], StandardForm],
               ImageSizeCache->{65., {3., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLText",
             StripOnInput->False],
            StyleBox[
             DynamicBox[
              ToBoxes[
               FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"], 
               StandardForm]], DynamicUpdating -> True, StripOnInput -> 
             False]],
           Annotation[#, 
            Style[
             Dynamic[
              FEPrivate`FrontEndResource["FEStrings", "sizeExplanation"]], 
             DynamicUpdating -> True], "Tooltip"]& ], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm],
               ImageSizeCache->{52., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowLess"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16643157424196866888, 5/2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm],
               ImageSizeCache->{62., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowMore"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16643157424196866888, 5 2],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm],
               ImageSizeCache->{44., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeShowAll"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           
           ButtonFunction:>OutputSizeLimit`ButtonFunction[
            OutputSizeLimit`Defer, 108, 16643157424196866888, Infinity],
           Enabled->True,
           Evaluator->Automatic,
           Method->"Queued"], 
          ButtonBox[
           PaneSelectorBox[{False->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm],
               ImageSizeCache->{78., {1., 9.}}],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControl",
             StripOnInput->False], True->
            StyleBox[
             StyleBox[
              DynamicBox[ToBoxes[
                FEPrivate`FrontEndResource["FEStrings", "sizeChangeLimit"], 
                StandardForm]],
              StripOnInput->False,
              DynamicUpdating->True], "OSLControlActive",
             StripOnInput->False]}, Dynamic[
             CurrentValue["MouseOver"]],
            Alignment->Center,
            FrameMargins->0,
            ImageSize->{Automatic, 25}],
           Appearance->None,
           BaselinePosition->Baseline,
           ButtonFunction:>FrontEndExecute[{
              FrontEnd`SetOptions[
              FrontEnd`$FrontEnd, 
               FrontEnd`PreferencesSettings -> {"Page" -> "Advanced"}], 
              FrontEnd`FrontEndToken["PreferencesDialog"]}],
           Evaluator->None,
           Method->"Preemptive"]}
        },
        AutoDelete->False,
        FrameStyle->GrayLevel[0.85],
        GridBoxDividers->{"Columns" -> {False, {True}}},
        GridBoxItemSize->{"Columns" -> {{Automatic}}, "Rows" -> {{Automatic}}},
        GridBoxSpacings->{"Columns" -> {{2}}}]}
     },
     DefaultBaseStyle->"Column",
     GridBoxAlignment->{
      "Columns" -> {{Left}}, "ColumnsIndexed" -> {}, "Rows" -> {{Baseline}}, 
       "RowsIndexed" -> {}},
     GridBoxDividers->{
      "Columns" -> {{False}}, "ColumnsIndexed" -> {}, "Rows" -> {{False}}, 
       "RowsIndexed" -> {}},
     GridBoxItemSize->{
      "Columns" -> {{Automatic}}, "ColumnsIndexed" -> {}, "Rows" -> {{1.}}, 
       "RowsIndexed" -> {}},
     GridBoxSpacings->{"Columns" -> {
         Offset[0.27999999999999997`], {
          Offset[0.5599999999999999]}, 
         Offset[0.27999999999999997`]}, "ColumnsIndexed" -> {}, "Rows" -> {
         Offset[0.2], 
         Offset[1.2], {
          Offset[0.4]}, 
         Offset[0.2]}, "RowsIndexed" -> {}}],
    BaseStyle->"OutputSizeLimit",
    FrameMargins->{{12, 12}, {0, 15}},
    FrameStyle->GrayLevel[0.85],
    RoundingRadius->5,
    StripOnInput->False],
   Deploy,
   DefaultBaseStyle->"Deploy"],
  If[16643157424196866888 === $SessionID, 
   Out[108], Message[
     MessageName[Syntax, "noinfoker"]]; Missing["NotAvailable"]; 
   Null]]], "Output",
 CellChangeTimes->{3.709257135853859*^9, 
  3.7097857856836042`*^9},ExpressionUUID->"ea2bff9f-c2ea-4f00-9f4b-\
64923df88b6e"]
}, Open  ]]
},
WindowSize->{1350, 685},
WindowMargins->{{-8, Automatic}, {Automatic, 0}},
FrontEndVersion->"11.1 for Microsoft Windows (64-bit) (April 18, 2017)",
StyleDefinitions->"Default.nb"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 216, 4, 55, "Text", "ExpressionUUID" -> \
"a1898960-e1e8-4a6e-979e-62b99bfe4273"],
Cell[777, 26, 314, 8, 68, "Text", "ExpressionUUID" -> \
"62289b58-1760-4b30-bb94-9b53458d4d88"],
Cell[CellGroupData[{
Cell[1116, 38, 606, 14, 50, "Input", "ExpressionUUID" -> \
"0ee74ac0-65d6-4dfe-b34e-d15486e6ce09"],
Cell[1725, 54, 195239, 4173, 638, "Output", "ExpressionUUID" -> \
"45b4fffa-affb-49f3-804a-2d1033d44676"]
}, Open  ]],
Cell[CellGroupData[{
Cell[197001, 4232, 1532, 41, 145, "Input", "ExpressionUUID" -> \
"9d8cc2f3-c9c3-4eac-b01b-92d79d0f672c"],
Cell[198536, 4275, 204803, 4363, 638, "Output", "ExpressionUUID" -> \
"5a0708d0-4087-47b6-a62b-b2763d7b96d8"]
}, Open  ]],
Cell[403354, 8641, 309, 6, 30, "Text", "ExpressionUUID" -> \
"9ab839ed-49fb-4a46-b783-18d02b7bec91"],
Cell[403666, 8649, 1139, 20, 69, "Input", "ExpressionUUID" -> \
"cea28e58-1ce9-474b-8597-25c0df4e26c4"],
Cell[404808, 8671, 212, 4, 30, "Text", "ExpressionUUID" -> \
"52c1d5d1-c0ac-48a0-abd0-8fa19f60e3fd"],
Cell[405023, 8677, 433, 12, 50, "Input", "ExpressionUUID" -> \
"d556159a-bc7a-42ae-a06c-2a9961d7afae"],
Cell[405459, 8691, 420, 8, 49, "Text", "ExpressionUUID" -> \
"62a3253b-f0fa-4743-9020-6485c6adac43"],
Cell[CellGroupData[{
Cell[405904, 8703, 1192, 33, 107, "Input", "ExpressionUUID" -> \
"0aab4925-c957-4160-a5e3-e34fff2e0fd8"],
Cell[407099, 8738, 7464, 199, 90, "Output", "ExpressionUUID" -> \
"39b2d10b-c554-4cba-88ad-4cf85c7fafc8"]
}, Open  ]],
Cell[CellGroupData[{
Cell[414600, 8942, 1221, 29, 69, "Input", "ExpressionUUID" -> \
"e3fe6fef-6e50-476e-bc12-13f732cb6845"],
Cell[415824, 8973, 7460, 199, 90, "Output", "ExpressionUUID" -> \
"76fab221-d2d4-4be1-83bb-ae9a894db93d"]
}, Open  ]],
Cell[423299, 9175, 189, 3, 30, "Text", "ExpressionUUID" -> \
"d3d5a001-c94b-47b1-8e0f-7ee920757c56"],
Cell[423491, 9180, 787, 19, 50, "Input", "ExpressionUUID" -> \
"e7b3d959-c2da-418a-9f0d-09a1ab905c19"],
Cell[424281, 9201, 233, 6, 30, "Text", "ExpressionUUID" -> \
"580f8757-1bf0-409c-8a6f-e01ba8c4065d"],
Cell[424517, 9209, 451, 13, 30, "Input", "ExpressionUUID" -> \
"d6bee7e5-c911-43ab-b658-73e3004776c9"],
Cell[424971, 9224, 71, 0, 30, "Text", "ExpressionUUID" -> \
"0f5fce1f-93a3-4d31-8591-b8edbb14aef3"],
Cell[425045, 9226, 284, 6, 30, "Text", "ExpressionUUID" -> \
"d5025355-2c77-4923-9704-01c6cb024100"],
Cell[425332, 9234, 1106, 28, 69, "Input", "ExpressionUUID" -> \
"96173d5b-6791-4b20-934b-037850e648c8"],
Cell[CellGroupData[{
Cell[426463, 9266, 1149, 26, 69, "Input", "ExpressionUUID" -> \
"e5875938-03d2-45f6-9638-f6ebe2e4cc80"],
Cell[427615, 9294, 7464, 199, 90, "Output", "ExpressionUUID" -> \
"63a15a1d-3071-4f74-a47f-a69dec6b6b85"]
}, Open  ]],
Cell[435094, 9496, 251, 5, 30, "Text", "ExpressionUUID" -> \
"7427ae0d-0560-4bb8-954c-85ac6701634b"],
Cell[435348, 9503, 755, 17, 30, "Input", "ExpressionUUID" -> \
"3023fdc8-4f5a-4c15-a548-a8bac268bddf"],
Cell[436106, 9522, 893, 20, 30, "Input", "ExpressionUUID" -> \
"345500ff-bdf4-4b74-8599-14dce8c8bad1"],
Cell[437002, 9544, 179, 3, 30, "Text", "ExpressionUUID" -> \
"fd12aa37-b263-428b-bdfa-aa85583350ef"],
Cell[437184, 9549, 323, 9, 30, "Input", "ExpressionUUID" -> \
"7ed5a3fb-a155-4906-ab5b-452ed9a826ba"],
Cell[437510, 9560, 228, 6, 62, "Text", "ExpressionUUID" -> \
"c1d87b50-7010-4415-8ada-504fec596aa0"],
Cell[437741, 9568, 856, 26, 69, "Input", "ExpressionUUID" -> \
"ded370ce-64b6-4a1d-bf47-2bd150a4158f"],
Cell[438600, 9596, 247, 6, 30, "Text", "ExpressionUUID" -> \
"8ad51521-63a8-455e-a970-8c992a71e2d1"],
Cell[438850, 9604, 351, 8, 80, "Text", "ExpressionUUID" -> \
"92838201-e43c-4591-8e33-267d8bf0193f"],
Cell[CellGroupData[{
Cell[439226, 9616, 327, 7, 50, "Input", "ExpressionUUID" -> \
"3c7f7b8b-a4be-47ce-9d92-2ed4a4f92d83"],
Cell[439556, 9625, 7381, 197, 90, "Output", "ExpressionUUID" -> \
"a60a1012-29e9-46b8-92d6-9e7f9e1acf49"]
}, Open  ]],
Cell[446952, 9825, 185, 3, 48, "Text", "ExpressionUUID" -> \
"de5e032f-fe69-4d10-ac6d-31e122468731"],
Cell[CellGroupData[{
Cell[447162, 9832, 244, 6, 30, "Input", "ExpressionUUID" -> \
"b3e8c44c-3e3b-4cd3-8c42-f25879a51b38"],
Cell[447409, 9840, 7774, 205, 90, "Output", "ExpressionUUID" -> \
"2bdc0e9a-aac9-4a36-a18d-e258faefd99f"]
}, Open  ]],
Cell[455198, 10048, 228, 4, 48, "Text", "ExpressionUUID" -> \
"a60e52f5-75da-453d-8e50-4caf6a4886f6"],
Cell[CellGroupData[{
Cell[455451, 10056, 265, 6, 30, "Input", "ExpressionUUID" -> \
"43255825-5dac-4965-b4ae-be9c0b5b1348"],
Cell[455719, 10064, 7788, 205, 90, "Output", "ExpressionUUID" -> \
"a2ad4b52-8cab-48c3-a8a8-3630d5676194"]
}, Open  ]],
Cell[463522, 10272, 185, 3, 48, "Text", "ExpressionUUID" -> \
"59aaea45-ce4e-4931-b67e-384d587c2664"],
Cell[CellGroupData[{
Cell[463732, 10279, 267, 6, 30, "Input", "ExpressionUUID" -> \
"48c7b15f-2b74-42e2-94b4-3531b11da36d"],
Cell[464002, 10287, 89752, 1776, 670, "Output", "ExpressionUUID" -> \
"7a3cb699-fdd2-4b9c-8c82-f2c76914b5ee"]
}, Open  ]],
Cell[553769, 12066, 245, 7, 81, "Text", "ExpressionUUID" -> \
"2bf2cf3e-02ae-4522-958e-b4f65128cc29"],
Cell[554017, 12075, 867, 26, 69, "Input", "ExpressionUUID" -> \
"fa78b55b-3641-4cda-85e1-46b05f657a2f"],
Cell[554887, 12103, 279, 7, 80, "Text", "ExpressionUUID" -> \
"3261fdb8-228a-47ac-ae9a-e0716c3286c1"],
Cell[CellGroupData[{
Cell[555191, 12114, 282, 7, 50, "Input", "ExpressionUUID" -> \
"08d86371-1d42-4639-81e4-e9115e6b18c8"],
Cell[555476, 12123, 7382, 197, 90, "Output", "ExpressionUUID" -> \
"1752a10f-ace7-4e4d-ba50-b73c1433b2b3"]
}, Open  ]],
Cell[562873, 12323, 159, 3, 48, "Text", "ExpressionUUID" -> \
"715cf737-f625-40b3-8def-2d0867317682"],
Cell[CellGroupData[{
Cell[563057, 12330, 244, 6, 30, "Input", "ExpressionUUID" -> \
"309eaa80-fb72-4ca1-9dd6-26ab7674f6f1"],
Cell[563304, 12338, 7796, 204, 90, "Output", "ExpressionUUID" -> \
"be294aa1-ce96-4fa6-8e4c-856469e8cb41"]
}, Open  ]],
Cell[571115, 12545, 156, 3, 48, "Text", "ExpressionUUID" -> \
"882d3ac4-aad0-48ab-a551-7bb670b3e471"],
Cell[CellGroupData[{
Cell[571296, 12552, 265, 6, 30, "Input", "ExpressionUUID" -> \
"dfef2f7d-282c-4ca4-9cd0-685e614c2552"],
Cell[571564, 12560, 7811, 205, 90, "Output", "ExpressionUUID" -> \
"5caa4fe1-71a8-4126-b1b4-97010544b41f"]
}, Open  ]],
Cell[579390, 12768, 197, 6, 67, "Text", "ExpressionUUID" -> \
"18aed57b-5976-4243-a5a2-521b2d41b106"],
Cell[CellGroupData[{
Cell[579612, 12778, 269, 6, 30, "Input", "ExpressionUUID" -> \
"ed6fb792-3903-4958-91ab-4b0756de61a5"],
Cell[579884, 12786, 89967, 1784, 670, "Output", "ExpressionUUID" -> \
"0572d65c-739b-4f5a-804f-bef48a8a29f8"]
}, Open  ]],
Cell[669866, 14573, 221, 6, 81, "Text", "ExpressionUUID" -> \
"cc5467f7-7926-40a1-a478-9a01bfd9bf0e"],
Cell[670090, 14581, 872, 26, 69, "Input", "ExpressionUUID" -> \
"ebdcf738-5e9d-436a-b920-b200c7401ea8"],
Cell[670965, 14609, 236, 5, 43, "Text", "ExpressionUUID" -> \
"bd2c90fd-e1f2-484d-b5ad-a15940e0e497"],
Cell[671204, 14616, 195, 6, 67, "Text", "ExpressionUUID" -> \
"68e06f44-4ee9-409a-9490-af87da6cfbfa"],
Cell[CellGroupData[{
Cell[671424, 14626, 235, 5, 50, "Input", "ExpressionUUID" -> \
"4a33d7ae-37ed-4ca9-8cc0-bbb70cb0a879"],
Cell[671662, 14633, 7390, 197, 90, "Output", "ExpressionUUID" -> \
"ec732b93-152e-4c09-b597-82f0c42751b0"]
}, Open  ]],
Cell[679067, 14833, 159, 3, 48, "Text", "ExpressionUUID" -> \
"9da6d066-8154-47a3-bad5-8a67845fb6ac"],
Cell[CellGroupData[{
Cell[679251, 14840, 270, 6, 30, "Input", "ExpressionUUID" -> \
"5c62d7d9-0419-4599-b7db-ec248669f3d9"],
Cell[679524, 14848, 7803, 205, 90, "Output", "ExpressionUUID" -> \
"d792a044-0d09-4023-a492-777419669307"]
}, Open  ]],
Cell[687342, 15056, 194, 6, 67, "Text", "ExpressionUUID" -> \
"c53b957f-14f9-41b2-8171-b52146278f19"],
Cell[CellGroupData[{
Cell[687561, 15066, 265, 6, 30, "Input", "ExpressionUUID" -> \
"365e1f51-4e2a-4f99-9fa4-db5894f32076"],
Cell[687829, 15074, 7809, 205, 90, "Output", "ExpressionUUID" -> \
"f7c39b8b-93e3-4ada-9395-b0876457dae3"]
}, Open  ]],
Cell[695653, 15282, 71, 0, 30, "Text", "ExpressionUUID" -> \
"37ccb613-941c-41af-bb04-b811609f1198"],
Cell[695727, 15284, 161, 3, 48, "Text", "ExpressionUUID" -> \
"88d8389b-f15c-4b52-9949-faadc8aa7028"],
Cell[CellGroupData[{
Cell[695913, 15291, 245, 6, 30, "Input", "ExpressionUUID" -> \
"d46dec02-da3e-40f9-bca2-9d466263c28a"],
Cell[696161, 15299, 89722, 1774, 670, "Output", "ExpressionUUID" -> \
"ea2bff9f-c2ea-4f00-9f4b-64923df88b6e"]
}, Open  ]]
}
]
*)

